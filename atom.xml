<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aspire</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/"/>
  <updated>2018-07-31T07:22:48.830Z</updated>
  <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/</id>
  
  <author>
    <name>Aspire</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大一时光</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/07/21/%E5%A4%A7%E4%B8%80%E6%97%B6%E5%85%89/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/07/21/大一时光/</id>
    <published>2018-07-21T03:57:49.000Z</published>
    <updated>2018-07-31T07:22:48.830Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="入学"><a href="#入学" class="headerlink" title="入学"></a>入学</h3><p>当时满怀对大学的期望，幻想自己的风生水起，自己的好友成群。但事实并非这样，但是啊，也不错的！至少按自己的目标完成了一些事，自我评价，没有浪费自己的时间，至少没有陷入游戏中。大学的前三个月，很忙，没有目标，是真的迷茫，都不知道自己为了什么，所做的事基本毫无意义，但是却占用了大把时光。后来期中考试后的一个晚上，对自己十分失望，那晚，有风，有雨，内心躁动，我坐在自习室，思考着我是为了什么，那种没有目标的感觉，真的比高考难受多了，你有大把时间，却不知道怎么用，而且自己也并不快乐。<br><a id="more"></a></p><p>随后，迷茫的从书包中抽出一张白纸，打开中性笔，开始问自己问题。你的理想是什么？你的目标是什么？你大学想干什么？你为了谁努力？…………当这些问题落在纸上，我的大脑才开始回忆，开始思考，半年前自己绝望的时候，是怎么自我安慰的：“大学就是人生最光辉的时刻，你所有的愿望都可以在那里实现，自由是你拥有的最快乐的东西，它属于你，并且你可以让自己更快乐！”</p><p>我写下了回答：“我喜欢科技，想做一些自己能控制的东西，完成之前条件限制不能完成的事。在大学我要好好学习，完成高中填志愿时未完成的梦想。我大学想认真学习自己喜欢的东西，自己有了自由的时间，就可以自由支配了，电影、技术、读书、旅游、音乐、爱情（这个有些难啊！不过还是努力提升自己，当那个人出现时，你可以自信的站在她面前，互相欣赏。）等等。我为了自己、亲人和家族（家族这个概念也是近期了解的，之前我们家好像属于地主那种，到我爷爷那辈，基本已经落寞了，再碰上文革，然后彻底翻不了身。我们村里当时的土地好像就属于我们祖上，周围的邻居都姓李，所以都是有血缘关系的，这个真是知道太晚了。家族如今现状，直系亲属基本发展平常，都属于农民阶级，如果要跨越阶级的话，只能靠知识和眼界了，这些东西唯一能获得的，就是通过求学，所以复兴之路，只能靠自己）”</p><p>之后越问越清晰，自己的未来规划慢慢形成，然后写了一些具体实施过程，用一句话概括—-<strong>自律才能自由</strong>，这也正是我所追求的，内心的从容与外在的满足。现在写的过程就很自由，吹着风扇，听着喜欢的音乐，喝着水，思绪自由，想唱就唱，最后一条，很安静，就我一个人（^_^）。随后我做的就是，卸载王者，我记得印象最深刻的是，一天没事，连续玩了四个小时，最后眼睛疼，真是自讨苦吃，自从卸载后，，自由的时间也就多了，找了一些其他代替的事，听听音乐，写写博客，记录记录时光，这样其实也不错。</p><p>本来就准备随便写写，没想到第一部分就赶上了一篇高中作文，不过很满足！</p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>说实话，这方面真的欠很多，去年均分83，今年应该稍微低一些。当时自己期望是均分90多，看来实现不了了。</p><p>其实，复习的时候很不在状态，经常会睡觉，也没有斗志，真的需要好好反省一下。目前觉得，高中时候的状态其实挺好的，基本不太问问题，然后就要自己想，所以很多东西都理解透彻了，这样应用起来游刃有余。还有发现一个问题，自己做题只求量，质根本保证不了，其实做一遍根本没印象，需要对这答案认真改才有效果。</p><p>最后，学习任何东西都要有目标，有学习的欲望，就像当时的数学联赛，很难，但是很有趣，具有挑战性，我喜欢，所以才能做好。根据经验，学习东西都是别人指一条路或者自己摸索，过程只能靠自己一步一个脚印踏出来，没有任何捷径，只有自己走过才知道该怎么走。</p><p>学习的事今天就先更新到这里</p><p>———————-更2018.7.22——————–</p><h3 id="兴趣爱好"><a href="#兴趣爱好" class="headerlink" title="兴趣爱好"></a>兴趣爱好</h3><p>大学来算是真正接触了自己喜欢的东西，大一刚入学，加入了中兴物联创新俱乐部，想着要发展自己的弱项，所以不能一直学习技术，所以加入了秘书部，对于这个选择，没有什么可评价的，自己选的，就是最好的。<br>当然，在俱乐部期间，我也学习了许多技术方面的知识，印象最深的就是博客搭建，还有HTML等等。刚开始觉得很忙，现在回想起来，大多数时间都去开会、参加俱乐部讲座，因为当时也是刚去，所以效率不是很高。不过无论如何，这些路都是要走的，早晚的事。第一学期其实没有学到很多真本事，但是接触了很多东西，终于可以听明白别人在说什么，还记得当时一脸懵逼的听着别人说树莓派，github，Python，算法，单片机等等，完全不知道在说什么，现在看来一切都那么水到渠成、自然而然。</p><p>主要的技术学习都在寒假期间，当时自己觉得42天能学到什么，一般不会有什么进展的。后来，只有自己经历过，才知道改变有多大，只要自己愿意，没有什么是不可能的。C语言是高中初学时的基础，c++是临阵磨枪学得的，还有Python，完全是迫不得已，顺便还有MATLAB（这门语言知只是知道一些基础，还到不了应用这个阶段）。从编程语言的学习中，有一条很重要的感想，所有语言都是相通的，只要找到其中的规律，相互转化起来其实很容易。希望把这种能力应用到其他语言的学习上，学习外语，帮助真的很大，当你走向世界，就会有一种”书到用时方恨少”的感觉,当你和别人无障碍交流时，你会发现那种感觉真的很好。</p><p>寒假期间学习的方向主要是机器视觉和机器学习，完全是强行入门，当时没有翻墙，用百度搜索，关键词是车牌识别，基本这个关键词下的大部分链接都看了，然后边看边做笔记，然后实践，还记得当时一个一个的查卷积、神经网络、SVM、canny等等，不知道就查，经历了接近10天吧，对这方面有了系统的认识，然后进入实践阶段。然后又遇到一个大麻烦，安装VS，清楚地记得是3.8G，当时用的亲戚家的网络，然后装了一整天（48G），可悲的是还装的有问题，又卡了两天，逛了贴吧等等，四处找解决办法，最后决定卸载重装，第二次挺快，然后用代码测试，还记得当时想显示一张lena的图片，但就是不行，我也不知道原因，最后换了一张图片，突然柳暗花明，好像是有些图片有问题。之后第一次调用了摄像头，然后开始了opencv的学习。</p><p>后来准备一步步自己实现车牌识别，先定位车牌，后进行字符分割，最后识别，此处有个小插曲，车牌定位的时候，找到的代码都不行，但是在搜索的时候，发现了人脸识别，然后就曲线救国，在学习人脸识别的过程，知道了需要识别的模型，而且opencv里有，最后偶然就从人脸定位无缝过渡到了车牌定位，期间问题虽然都很多，但最终还是一一克服了。接下来的字符分割相对能轻松些，到最后的字符识别，因为自己不会训练识别模型，都是在网上找别人的，导致一直得不到正确结果，到现在也一样。总结起来，大概20多天就完成了最初任务的绝大多数，每一次突破问题后，几乎都是激动地叫出声来，真是太不容易了。</p><p>尼彩说过</p><blockquote><p>凡是不能将我打败的困难，都将使我更加强大</p></blockquote><p>回头望去，我很感激当时的自己，那么刻苦，那么执着，没有放弃。就像高考完后感谢高中时那么努力的自己。那句“越努力越幸运”，对于我目前的状态，真的很适用。</p><p>第二学期来学习了一些网页制作方面的知识，结合HTML和css，虽然后者没学，但是基本框架还是可以看懂的，依靠github pages，可以自己做一些网页了，挺开心的，技多不压身嘛！其他像单片机、STM32这类，也是只了解了基本框架，学习了如何使用一些常见模块，感觉很有用。</p><p>这里简单总结一下这一年来技术方面的学习：总体来说，学习的范围还是有些小，不过基本满足需求了。还发现了一个现象，平时自学也要踏踏实实，不然还会被别人甩在身后，就拿C语言来说，我学的很早，但成绩远不如那些第一次接触的人，而且我的成绩让自己感到很羞愧。所以，对待一切，都要认认真真。</p><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p>大学之前，我的一切信息都在网下，害怕自己的信息泄露，所以很少在网上留存自己的信息。但是后来随着接触信息的增多，发现自己的信息其实一文不值，没有人会在乎的，所以后来，很多东西我都会选择放在网络上，这样用起来特别方便，只要有网络，你就能调出信息。</p><p>还有突然发现自己养成了一个比较好的习惯—–记录自己的经历和感想，而且还会定时规划自己接下来的路，发现自己的路越来越清晰，最终的结果依靠的是中间的过程。还有就是越来越喜欢看知乎，思维真的很开放，分析问题的角度基本是全方位无死角，让你能清晰的看到问题的真面目，而且也很干净，看着也舒服，看知乎的这段时间，真的提升了我思维的深度，很感谢它。</p><p>生活方面，更注重健康了，准备尽快开始锻炼，跑步、引体向上，锻炼一个强健的体魄。更注重家庭了，以后聚在一起的时间会越来越短，所以想做的事尽快去做。</p><p>还有一些事没写，今天就先写到这里吧！稍后再更</p><p>——————–2018.7.31———————</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;入学&quot;&gt;&lt;a href=&quot;#入学&quot; class=&quot;headerlink&quot; title=&quot;入学&quot;&gt;&lt;/a&gt;入学&lt;/h3&gt;&lt;p&gt;当时满怀对大学的期望，幻想自己的风生水起，自己的好友成群。但事实并非这样，但是啊，也不错的！至少按自己的目标完成了一些事，自我评价，没有浪费自己的时间，至少没有陷入游戏中。大学的前三个月，很忙，没有目标，是真的迷茫，都不知道自己为了什么，所做的事基本毫无意义，但是却占用了大把时光。后来期中考试后的一个晚上，对自己十分失望，那晚，有风，有雨，内心躁动，我坐在自习室，思考着我是为了什么，那种没有目标的感觉，真的比高考难受多了，你有大把时间，却不知道怎么用，而且自己也并不快乐。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>电影墙</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/06/12/%E7%94%B5%E5%BD%B1%E5%A2%99/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/06/12/电影墙/</id>
    <published>2018-06-12T14:19:56.000Z</published>
    <updated>2018-06-20T08:41:29.190Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>简介稍后补充</p><blockquote><p>《阿凡达》</p></blockquote><blockquote><p>《脑中的橡皮擦》</p></blockquote><a id="more"></a><p>暂时设计为按国家分类，主要看的是美国科幻、韩国和日本的爱情电影。韩国主要是爱情电影，爱的太深刻、太感人！<br>感悟稍后有时间补上。</p><h2 id="1-韩国"><a href="#1-韩国" class="headerlink" title="1.韩国"></a>1.韩国</h2><blockquote><p>《狼少年》</p></blockquote><blockquote><p>《太阳的后裔》</p></blockquote><blockquote><p>《假如爱有天意》</p></blockquote><blockquote><p>《热血青春》</p></blockquote><blockquote><p>《只有你》</p></blockquote><blockquote><p>《现在去见你》</p></blockquote><p>青春，朦胧</p><blockquote><p>《》</p></blockquote><blockquote><p>《》</p></blockquote><h2 id="2-日本"><a href="#2-日本" class="headerlink" title="2.日本"></a>2.日本</h2><blockquote><p>《在世界中心呼唤爱》</p></blockquote><blockquote><p>《寄生兽》</p></blockquote><h2 id="3-美国"><a href="#3-美国" class="headerlink" title="3.美国"></a>3.美国</h2><p><strong>科幻</strong></p><blockquote><p>《美国队长系列》</p></blockquote><blockquote><p>《钢铁侠系列》</p></blockquote><blockquote><p>《蜘蛛侠系列》（三个版本）</p></blockquote><blockquote><p>《黑衣人系列》</p></blockquote><blockquote><p>《异形系列》</p></blockquote><blockquote><p>《复仇者联盟系列》</p></blockquote><blockquote><p>《绿巨人系列》</p></blockquote><blockquote><p>《终结者系列》</p></blockquote><blockquote><p>《金刚狼系列》</p></blockquote><blockquote><p>《雷神系列》</p></blockquote><blockquote><p>《普罗米修斯》</p></blockquote><p><strong>爱情</strong></p><blockquote><p>《泰坦尼克号》</p></blockquote><blockquote><p>《两小无猜》</p></blockquote><p><strong>励志</strong></p><blockquote><p>《当幸福来敲门》</p></blockquote><blockquote><p>《阿甘正传》</p></blockquote><h2 id="4-国内"><a href="#4-国内" class="headerlink" title="4.国内"></a>4.国内</h2><blockquote><p>《月光宝盒》</p></blockquote><blockquote><p>《神话》</p></blockquote><blockquote><p>《活着》</p></blockquote><blockquote><p>《早熟》</p></blockquote><blockquote><p>《咱们结婚吧》</p></blockquote><blockquote><p>《一九四二》</p></blockquote><blockquote><p>《听说》</p></blockquote><blockquote><p>《不能说的秘密》</p></blockquote><blockquote><p>《》</p></blockquote><blockquote><p>《》</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><blockquote><p>《初恋这件小事》</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简介稍后补充&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《阿凡达》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;《脑中的橡皮擦》&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Python的if ——__name__====&#39;__main__&#39;用法</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/06/10/Python%E7%9A%84if-%E2%80%94%E2%80%94-name-main-%E7%94%A8%E6%B3%95/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/06/10/Python的if-——-name-main-用法/</id>
    <published>2018-06-10T05:59:57.000Z</published>
    <updated>2018-06-10T06:08:32.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.这个语句实际作用不太大，但是会经常见到。算是一个程序入口，不过有些许差别，当语句在所在脚本执行时，会执行该语句后面的命令；当被调用时，则不执行。</p><a id="more"></a><p>2.具体操作：</p><p><a href="http://blog.konghy.cn/2017/04/24/python-entry-program/" target="_blank" rel="noopener">参考文章</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.这个语句实际作用不太大，但是会经常见到。算是一个程序入口，不过有些许差别，当语句在所在脚本执行时，会执行该语句后面的命令；当被调用时，则不执行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>校园网开IPV6</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/06/09/%E6%A0%A1%E5%9B%AD%E7%BD%91%E5%BC%80IPV6/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/06/09/校园网开IPV6/</id>
    <published>2018-06-09T14:40:44.000Z</published>
    <updated>2018-06-18T12:24:55.956Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.把校园网的网线插到电脑上（就是桌子后面的插口），打开设置—&gt;拨号—&gt;宽带连接—&gt;连接到Internet，然后输入校园网账号（学号）和密码。<br>如图：<br><img src="http://p6hlch5jf.bkt.clouddn.com/ipv6_peizhi.png" alt=""><br><a id="more"></a></p><p><img src="http://p6hlch5jf.bkt.clouddn.com/bohao.png" alt=""></p><p>2.接下来是更改一下设置，将网络改成走只IPV6，很简单。然后打开更改网络配置，点击宽带，右键属性，选择网络，点击下面的属性，在下面的DNS里面输入<code>2001:4860:4860::8888</code>和<code>2001:4860:4860::8844</code>。<br><img src="http://p6hlch5jf.bkt.clouddn.com/%E5%AE%BD%E5%B8%A6.png" alt=""><br><img src="http://p6hlch5jf.bkt.clouddn.com/dns.png" alt=""></p><p>3.最后主要是替换原来的hosts文件，不知道没有关系，它在<code>C:\Windows\System32\drivers\etc</code>下。在<a href="https://raw.githubusercontent.com/lennylxx/ipv6-hosts/master/hosts" target="_blank" rel="noopener">这里</a>下载文件，然后替换原来的。</p><p>4.最后按<code>win+R</code>,输入cmd,然后回车,打开命令行界面，然后输入<code>ipconfig/flushdns</code>,显示<code>已成功刷新 DNS 解析缓存</code>就成功了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.把校园网的网线插到电脑上（就是桌子后面的插口），打开设置—&amp;gt;拨号—&amp;gt;宽带连接—&amp;gt;连接到Internet，然后输入校园网账号（学号）和密码。&lt;br&gt;如图：&lt;br&gt;&lt;img src=&quot;http://p6hlch5jf.bkt.clouddn.com/ipv6_peizhi.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>git的使用</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/05/17/git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/05/17/git的使用/</id>
    <published>2018-05-17T10:43:13.000Z</published>
    <updated>2018-05-17T10:48:18.501Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、内容简介"><a href="#一、内容简介" class="headerlink" title="一、内容简介"></a>一、内容简介</h1><p><img src="https://assets-cdn.github.com/images/modules/logos_page/Octocat.png" alt=""><br><a id="more"></a></p><ol><li>在github上申请一个账号，包括<strong>用户名</strong>和<strong>邮箱</strong>，这是我们信息存储的最主要标识，一定要记住，后面会多次用到。</li><li>我们申请的账号下，可以建立很多仓库，用来存放我们的文件。<code>git</code>的方便之处就在于可以轻松在不同仓库之间切换。</li><li>本地电脑连接远程仓库（也就是网上的代码），需要通过ssh登录来实现，原理就是在本地电脑上输入<code>ssh-keygen -t rsa -C &quot;642746796@qq.com&quot;</code>（引号之内填你的邮箱），然后会生成一串公钥密文，在<code>~/ssh/</code>文件夹下，默认有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，打开后者，复制全部内容，然后去github官网上打开你的账户，把公钥粘贴进去。这样，本地电脑和远程仓库就形成了一一对应关系，本地上修改内容后，就可以通过<code>git push</code>来更新远程仓库，从而更新。</li></ol><h1 id="二、实际操作"><a href="#二、实际操作" class="headerlink" title="二、实际操作"></a>二、实际操作</h1><ol><li>打开<code>git bash</code>，输入git账号信息，分别是<code>git config --global user.name &quot;ljgithub669&quot;</code>和<code>git config --global user.email &quot;642746796@qq.com&quot;</code>。然后输入<code>git config user.name</code>和<code>git config user.email</code>可以查看当前本地账户信息，也就是你刚才配置的信息。</li><li>用<code>ssh -T git@github.com</code>测试连接情况。</li></ol><p>这是我的电脑显示的情况，如果不一样，出现其他情况则输入yes<br><img src="http://p6hlch5jf.bkt.clouddn.com/git_connect.png" alt=""></p><ol><li>接下来就很简单，只需要三步</li></ol><ul><li><p>git add .</p></li><li><p>git commit -m “描述”</p></li><li><p>git push</p></li></ul><p>以上三步都是在<code>git clone</code>的文件夹下进行的。其中<code>git add</code>也可以指定添加文件，例如<code>git add newfile</code>。</p><p>可以通过<code>git status</code>和<code>git log</code>来查看代码更改情况</p><h1 id="三、踩过的坑"><a href="#三、踩过的坑" class="headerlink" title="三、踩过的坑"></a>三、踩过的坑</h1><p>1.之前第一次尝试没有问题，很顺利。之后又申请了一个github账号，然后准备用两个账号熟悉一下git的使用，主要是学习git request的使用，然后就悲哀了，两个账号在切换的时候就出现了问题，显示一个账号禁止另一个账号进行<code>push</code>。</p><p>很久了，不知道怎么解决，直到看到一篇文章，还有<strong>凭据</strong>这个东西，需要注销第一个账号才能登陆第二个。我的电脑（win10）中的位置是：<strong>控制面板—&gt;用户账户—&gt;凭据管理器</strong>,在下面删除第一个github账号就可以顺利登陆第二个了。</p><p>这里有图<br><img src="http://p6hlch5jf.bkt.clouddn.com/git_ping_ju.png" alt=""></p><p>2.之前不知道，一个git账号下可以有很多仓库，每个仓库独立，更改时只需要将其<code>git clone</code>到本地即可，然后本地更改后push就可以了。</p><hr><ul><li>相关链接<a href="https://cnbin.github.io/blog/2015/05/30/git-ming-ling-da-quan/" target="_blank" rel="noopener">git常用命令</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、内容简介&quot;&gt;&lt;a href=&quot;#一、内容简介&quot; class=&quot;headerlink&quot; title=&quot;一、内容简介&quot;&gt;&lt;/a&gt;一、内容简介&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://assets-cdn.github.com/images/modules/logos_page/Octocat.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>音乐墙</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/05/06/%E9%9F%B3%E4%B9%90%E5%A2%99/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/05/06/音乐墙/</id>
    <published>2018-05-06T10:06:02.000Z</published>
    <updated>2018-07-03T15:07:58.954Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>暂时没想好以什么形式展现，尽量在暑假内列一个清单，或者直接把网易云账号贴出来。</p><p><a href="http://music.163.com/m/user/home?id=590854430" target="_blank" rel="noopener">网易云账号</a>，有些乱，还未整理。</p><p>音乐很美妙，生活很美好！</p><p>音乐顺序是随机的，还未来得及整理！</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="0" height="0" src="http://music.163.com/m/song?id=31445772&userid=590854430"><br></iframe> <p>1.<a href="http://music.163.com/song/1478661/?userid=590854430" target="_blank" rel="noopener">《I would rather be with you》</a></p><blockquote><p>Need to grow older with a girl like you</p></blockquote><p>2.<a href="http://music.163.com/song/526464145/?userid=590854430" target="_blank" rel="noopener">《喜欢》</a></p><blockquote><p>扛住了柴米油盐的麻烦，扛住了朋友聚会的刁难</p></blockquote><a id="more"></a><p>3.<a href="http://music.163.com/m/song?id=470759757&amp;userid=590854430" target="_blank" rel="noopener">《不露声色》</a></p><blockquote><p>中伤不是你的强项，黑夜看不见你的坚强</p></blockquote><p>4.<a href="http://music.163.com/m/song?id=447061584&amp;userid=590854430" target="_blank" rel="noopener">《七月上》</a></p><blockquote><p>笑是神的伪装，笑是强忍的伤</p></blockquote><p>5.<a href="http://music.163.com/m/song?id=449272168&amp;userid=590854430" target="_blank" rel="noopener">《寻乡》</a></p><blockquote><p>撑着伞的姑娘，也许笑的明朗</p></blockquote><p>6.<a href="http://music.163.com/m/song?id=461074907&amp;userid=590854430" target="_blank" rel="noopener">《寂静之空》</a></p><blockquote><p>思念的纯音乐</p></blockquote><p>7.<a href="http://music.163.com/m/song?id=537876700&amp;userid=590854430" target="_blank" rel="noopener">《弦上有春秋》</a></p><blockquote><p>青山延绵，是娇艳的美人尖</p></blockquote><p>8.<a href="http://music.163.com/m/song?id=452986458&amp;userid=590854430" target="_blank" rel="noopener">《红昭愿》</a></p><blockquote><p>年少风雅鲜衣怒马，也不过一刹那</p></blockquote><p>9.<a href="http://music.163.com/m/song?id=432506345&amp;userid=590854430" target="_blank" rel="noopener">《童话镇》</a></p><blockquote><p>总有一条蜿蜒在童话镇里七彩的河</p></blockquote><p>10.<a href="http://music.163.com/m/song?id=468517654&amp;userid=590854430" target="_blank" rel="noopener">《动物世界》</a></p><blockquote><p>人类用沙，想捏出梦里的通天塔</p></blockquote><p>11.<a href="http://music.163.com/m/song?id=27808044&amp;userid=590854430" target="_blank" rel="noopener">《丑八怪》</a></p><blockquote><p>如果世界漆黑，其实我很美</p></blockquote><p>12.<a href="http://music.163.com/m/song?id=449818741&amp;userid=590854430" target="_blank" rel="noopener">《光年之外》</a></p><blockquote><p>我没想到，为了你，我能疯狂到，山崩海啸</p></blockquote><p>13.<a href="http://music.163.com/m/song?id=525241230&amp;userid=590854430" target="_blank" rel="noopener">《狐狸》</a></p><blockquote><p>世人太警惕，道听途说里，口碑轮不到狐狸</p></blockquote><p>14.<a href="http://music.163.com/m/song?id=3163120&amp;userid=590854430" target="_blank" rel="noopener">《Safe and sound》</a></p><blockquote><p>Just clone you eyes</p></blockquote><p>15.<a href="http://music.163.com/m/song?id=30431367&amp;userid=590854430" target="_blank" rel="noopener">《走马》</a></p><blockquote><p>世界孤立我，任他奚落</p></blockquote><p>16.<a href="http://music.163.com/m/song?id=376312&amp;userid=590854430" target="_blank" rel="noopener">《在他乡》</a></p><blockquote><p>我多想回到家乡，再回到她的身旁</p></blockquote><p>17.<a href="http://music.163.com/m/song?id=31445772&amp;userid=590854430" target="_blank" rel="noopener">《理想三旬》</a></p><blockquote><p>就老去吧，孤独别醒来</p></blockquote><p>18.<a href="http://music.163.com/m/song?id=104322&amp;userid=590854430" target="_blank" rel="noopener">《我是神仙》</a></p><blockquote><p>一瞬间我摆脱善恶人世间里走</p></blockquote><p>19.<a href="http://music.163.com/m/song?id=549309116&amp;userid=590854430" target="_blank" rel="noopener">《离人愁》</a></p><blockquote><p>我应在江湖悠悠，饮一壶浊酒</p></blockquote><p>20.<a href="http://music.163.com/m/song?id=443194017&amp;userid=590854430" target="_blank" rel="noopener">《绿茶》</a></p><blockquote><p>人说长大后有很多失意</p></blockquote><p>21.<a href="http://music.163.com/m/song?id=455358996&amp;userid=590854430" target="_blank" rel="noopener">《豆花之歌》</a></p><blockquote><p>脑海里仍旧是你的笑脸</p></blockquote><p>22.<a href="http://music.163.com/m/song?id=5260494&amp;userid=590854430" target="_blank" rel="noopener">《一直很安静》</a></p><blockquote><p>给你的爱一直很安静</p></blockquote><p>23.<a href="http://music.163.com/m/song?id=464916877&amp;userid=590854430" target="_blank" rel="noopener">《樱花樱花想见你》</a></p><blockquote><p>能和你相遇最好了</p></blockquote><p>24.<a href="http://music.163.com/m/song?id=1210461&amp;userid=590854430" target="_blank" rel="noopener">《What are words》</a></p><blockquote><p>I would never leave when you needs me most.</p></blockquote><p>25.<a href="http://music.163.com/m/song?id=571621154&amp;userid=590854430" target="_blank" rel="noopener">《我的将军啊》</a></p><blockquote><p>狼烟风沙口，还请将军少饮酒，前方的路不好走，我在家中来等候。</p></blockquote><blockquote><p>三军听令<br>家有父母者，出列<br>家有妻儿者，出列<br>家有独子者，出列<br>家有妻而未得子嗣者，出列<br>父子同在军中，子出列<br>兄弟同在军中，弟出列<br>凡出列者留守军营<br>未出列的将士们随我——-杀</p></blockquote><p>26.<a href="http://music.163.com/m/song?id=509313150&amp;userid=590854430" target="_blank" rel="noopener">《Sakure Tears》</a></p><blockquote><p>樱花泪</p></blockquote><p>27.<a href="http://music.163.com/song/28157586/?userid=590854430" target="_blank" rel="noopener">《If i die young》</a></p><blockquote><p>So put on your best boys and I will wear my pearls</p></blockquote><p>28.<a href="http://music.163.com/song/32628933/?userid=590854430" target="_blank" rel="noopener">《孙大剩》</a></p><blockquote><p>可长大后却发现自己是那么平庸</p></blockquote><p>29.<a href="http://music.163.com/song/18161816/?userid=590854430" target="_blank" rel="noopener">《Let her go》</a></p><blockquote><p>Only know you love her when you let her go</p></blockquote><p>30.<a href="http://music.163.com/song/486999661/?userid=590854430" target="_blank" rel="noopener">《莫妮卡》</a></p><blockquote><p>oh my monica,be my signora</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暂时没想好以什么形式展现，尽量在暑假内列一个清单，或者直接把网易云账号贴出来。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://music.163.com/m/user/home?id=590854430&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网易云账号&lt;/a&gt;，有些乱，还未整理。&lt;/p&gt;
&lt;p&gt;音乐很美妙，生活很美好！&lt;/p&gt;
&lt;p&gt;音乐顺序是随机的，还未来得及整理！&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;0&quot; height=&quot;0&quot; src=&quot;http://music.163.com/m/song?id=31445772&amp;userid=590854430&quot;&gt;&lt;br&gt;&lt;/iframe&gt; 

&lt;p&gt;1.&lt;a href=&quot;http://music.163.com/song/1478661/?userid=590854430&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《I would rather be with you》&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Need to grow older with a girl like you&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.&lt;a href=&quot;http://music.163.com/song/526464145/?userid=590854430&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《喜欢》&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;扛住了柴米油盐的麻烦，扛住了朋友聚会的刁难&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>静态库、动态库</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/25/%E9%9D%99%E6%80%81%E5%BA%93%E3%80%81%E5%8A%A8%E6%80%81%E5%BA%93/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/25/静态库、动态库/</id>
    <published>2018-04-25T10:53:35.000Z</published>
    <updated>2018-04-25T10:56:19.325Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-静态链接库的生成"><a href="#1-静态链接库的生成" class="headerlink" title="1.静态链接库的生成"></a>1.静态链接库的生成</h1><p><a href="http://www.cnblogs.com/jiqingwu/p/4325382.html" target="_blank" rel="noopener">参考的文章</a></p><p>1.先生成目标文件，然后打包成静态库<br><code>gcc -c test1.c test2.c</code></p><a id="more"></a><p>2.静态库文件名称，以lib开头，以.a结尾，例如<code>libtest.a</code>。通过ar生成，<code>ar crv libtest.a test1.o test2.o</code>，要查看静态库包含的目标文件，可以使用<code>ar t libtest.a</code>查看。</p><p>3.接下来是生成可执行文件，<code>gcc test.c -L. -ltest -o test</code></p><p>过程如图：</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/link_jingtai.png" alt=""></p><h1 id="2-动态链接库的生成"><a href="#2-动态链接库的生成" class="headerlink" title="2.动态链接库的生成"></a>2.动态链接库的生成</h1><p><img src="http://p6hlch5jf.bkt.clouddn.com/link.png" alt="原理图"></p><p>1.动态库文件名必须以lib开头，以.so结尾，例如<code>libtest.so</code>。</p><p>2.首先，需要的文件如下，而且gcc都可以编译</p><p>3.生成动态链接库（此时是除主函数main外，其他所有函数打包的集合，即.o文件的集合，链接时可以通过和主函数链接产生可执行文件，可重复利用），只需要一步，<code>gcc test1.c test2.c -fPIC -shared -o libtest.so</code>，如图：</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/link_link.png" alt=""></p><p>可见已经产生libtest.so这个动态链接库<br>4.和主函数进行链接，也只有一步<code>gcc test.c -L. -ltest -o test</code>，生成的test即可执行文件</p><p>5.最后是运行，这一步要指定动态链接库的位置，需要用到<code>LD_LIBRARY_PATH=. ./test</code><br>,这样就可以执行了。<br><img src="http://p6hlch5jf.bkt.clouddn.com/link_run.png" alt=""></p><h1 id="3-g-gcc-编译选项"><a href="#3-g-gcc-编译选项" class="headerlink" title="3.g++(gcc)编译选项"></a>3.g++(gcc)编译选项</h1><p> -shared ：指定生成动态链接库。</p><p>  -static ：指定生成静态链接库。</p><p>  -fPIC ：表示编译为位置独立的代码，用于编译共享库。目标文件需要创建成位置无关码， 念上就是在可执行程序装载它们的时候，它们可以放在可执行程序的内存里的任何地方。</p><p>  -L. ：表示要连接的库所在的目录。</p><p>  -l：指定链接时需要的动态库。编译器查找动态连接库时有隐含的命名规则，即在给出的名字前面加上lib，后面加上.a/.so来确定库的名称。</p><p>  -Wall ：生成所有警告信息。</p><p>  -ggdb ：此选项将尽可能的生成gdb 的可以使用的调试信息。</p><p>  -g ：编译器在编译的时候产生调试信息。</p><p>  -c ：只激活预处理、编译和汇编,也就是把程序做成目标文件(.o文件) 。</p><p>  -Wl,options ：把参数(options)传递给链接器ld 。如果options 中间有逗号,就将options分成多个选项,然后传递给链接程序。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-静态链接库的生成&quot;&gt;&lt;a href=&quot;#1-静态链接库的生成&quot; class=&quot;headerlink&quot; title=&quot;1.静态链接库的生成&quot;&gt;&lt;/a&gt;1.静态链接库的生成&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/jiqingwu/p/4325382.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考的文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.先生成目标文件，然后打包成静态库&lt;br&gt;&lt;code&gt;gcc -c test1.c test2.c&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>make命令用法</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/22/make%E5%91%BD%E4%BB%A4%E7%94%A8%E6%B3%95/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/22/make命令用法/</id>
    <published>2018-04-22T15:50:50.000Z</published>
    <updated>2018-04-25T11:05:34.858Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.使用make命令需要条件：同一个文件夹下多个.c文件和一个makefile文件，如图：<br><img src="http://p6hlch5jf.bkt.clouddn.com/make_list1.png" alt=""><br><a id="more"></a></p><p>2.各个文件内容如下图：<br><img src="http://p6hlch5jf.bkt.clouddn.com/make_file.png" alt=""></p><p>3.主要是makefile的内容</p><pre><code>name ： file1.o filee2.o    gcc -o name file1.o file2.o</code></pre><p>其中name自己可以随便取。</p><p>4.具体执行过程：直接敲<code>make</code>即可，如图<br><img src="http://p6hlch5jf.bkt.clouddn.com/make_make1.png" alt=""></p><p>5.然后文件夹下会生成一个名为main的可执行文件，敲<code>./main</code>即可运行，如图<br><img src="http://p6hlch5jf.bkt.clouddn.com/make_run1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.使用make命令需要条件：同一个文件夹下多个.c文件和一个makefile文件，如图：&lt;br&gt;&lt;img src=&quot;http://p6hlch5jf.bkt.clouddn.com/make_list1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vim</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/19/Vim/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/19/Vim/</id>
    <published>2018-04-19T04:46:25.000Z</published>
    <updated>2018-04-20T16:34:48.498Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.设置行号：<code>set nu</code></p><p>取消行号：<code>set uonu</code></p><a id="more"></a><p>2.文本插入</p><p><code>o</code> 光标下插入行</p><p><code>O</code> 光标上插入行</p><p>3.</p><p>  <code>$</code>移至行尾</p><p>  <code>0</code>移至行头</p><p>  <code>H</code>屏幕上端</p><p>  <code>M</code>屏幕中央</p><p>  <code>L</code>屏幕下端</p><p>4.跳到第一行：<code>gg/G</code></p><p>跳到第n行：     <code>nG/:n</code></p><p>5.删除: <code>x</code></p><p>删除光标所在处后n个字符:   <code>nx</code></p><p>删除所在行: <code>dd</code></p><p>删除n行 :  <code>ndd</code></p><p>删除光标到结尾内容:   <code>dG</code></p><p>删除指定行   :<code>m,nd</code></p><p>6.复制和剪切</p><p>复制当前行:  <code>yy、Y</code></p><p>复制当前行以下n行 : <code>nyy、nY</code></p><p>剪切当前行以下n行:  <code>ndd</code></p><p>粘贴在当前行上或者下:  <code>p、P</code></p><p>7.替换光标下的字符 : <code>r</code></p><p>从光标处开始的行开始覆盖 : <code>R</code></p><p>8.向前搜索  :<code>/字符</code></p><p>全文替换指定字符串:  <code>:%s/old/new/g</code></p><p>在指定范围内替换字符串:  <code>:m,n/old/new/g</code></p><p>9.保存退出:<code>shift+zz</code></p><p>强行保存退出:<code>wq!</code>(限于root)</p><p>10.vi</p><p>导入其他文件内容:<code>:r /home/lijie</code></p><p>执行命令:<code>:! ls /home</code></p><p>以上可以组合:<code>:r !date</code></p><p>11.定义快捷键</p><p> 跳到行首:<code>:map ^p I#&lt;ESC&gt;</code> </p><p> 跳到行首删除第一个字符:<code>:map ^b 0x</code></p><p> 取消:<code>:unmap</code></p><p>12.多行注释</p><p><code>:m,ns/^/#/g</code>:   ^代表行首</p><p><code>:4,9s/^#//g</code>:   原理是替换</p><p>转意符:<code>:m/ns/^/\/g</code>行首插入//</p><p>替换:<code>:ab name1 name2</code></p><p>取消:<code>:unab</code></p><p>13.全局vi功能设置</p><pre><code>vi /root/.vimrcset nu</code></pre><p>14.切屏</p><p><code>ctrl+w+h/j/k/l</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.设置行号：&lt;code&gt;set nu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;取消行号：&lt;code&gt;set uonu&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>linux基础命令</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/19/linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/19/linux基础命令/</id>
    <published>2018-04-19T04:43:53.000Z</published>
    <updated>2018-04-20T16:52:57.397Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、文件操作和权限管理"><a href="#一、文件操作和权限管理" class="headerlink" title="一、文件操作和权限管理"></a>一、文件操作和权限管理</h2><p>1.只有root能执行的命令，在/sbin或/usr/sbin下（sbinsuper binary）</p><p>2.所有用户：在/bin或/usr/bin下<br><a id="more"></a><br>3.<code>drwxr-xr-x 22</code></p><p><code>d</code> 表示目录</p><p><code>-</code>表示二进制文件</p><p><code>l</code>表示软件链接文件link</p><p><code>22</code> 表示硬链接个数</p><p>4.<code>cd</code>意思是change directory</p><p>5.<code>pwd</code>意思是 print working directory</p><p>6.<code>cp -R</code>可以复制目录</p><p>7.<code>ctrl+c</code>终止命令</p><p>8.<code>mv</code>移动文件、改名</p><p>9.<code>head -20 /etc/name</code> 查看前20行</p><p>10.<code>tail -15 /etc/name</code> 查看后几行</p><p>11.软链接—&gt;类似于快捷方式图标</p><p><code>ln -s /name /newname</code>创建软连接</p><p>12.硬链接（不能跨分区生成链接）</p><p>没有s，功能比cp强大，可以同步更新比如<code>ln /name /newname</code></p><p>13.<code>ls -i</code>(inode)</p><p>查看文件i节点，文件唯一数字标志，但一个i节点可对应多个文件，比如硬链接  </p><p>14.权限处理命令</p><pre><code>chmod          u + r          g - w          o = x</code></pre><p><code>u</code>   使用者</p><p><code>g</code>   群组</p><p><code>o</code>   其他人</p><p>15.<code>chmod 755 filename</code></p><p>16.<code>su - lijie</code>切换用户</p><p>17.改变文件所有者</p><p>chown 用户名 文件名</p><ol><li>添加用户</li></ol><p><code>useradd lijie</code></p><p><code>passwd 11111111</code></p><p>19.<code>chgrp 用户名 文件名</code>改变所属组</p><p>20.设置默认权限</p><p><code>umask -S（大写）</code>查看默认权限</p><p>更改：<code>umask 权限掩码</code>（比如025，实际是777-025=752）</p><h2 id="二、文件查找"><a href="#二、文件查找" class="headerlink" title="二、文件查找"></a>二、文件查找</h2><p>1.which 命令</p><p>查看命令的绝对路径</p><p>2.whereis 命令</p><p>可以找到文件路径和帮助文档所在位置</p><p>3.find 搜素路径 搜索关键字 文件名</p><p><code>find /home -name filename</code></p><p><code>-name</code>  根据文件名查找</p><p><code>\*</code>  匹配任意字符</p><p><code>find /home -name li*</code></p><p><code>？</code> 匹配当字符</p><hr><p><code>find /home -name l????</code></p><p><code>-size</code> 文件大小（block数据块，512字节=0.5KB）</p><p>100M=102400KB=204800block</p><p>大于 +</p><p>小于 —</p><p><code>find /home -size +100</code></p><hr><p><code>-user</code> 文件所有者</p><p><code>find /home -user 用户名（root）</code></p><hr><p>时间值</p><p>以天为单位 <code>ctime atime mtime</code></p><p>分钟  <code>cmin amin mmin</code> </p><p><code>c</code>  change(文件属性被改变过）</p><p><code>a</code>  access（被访问过）</p><p><code>m</code>  modify(被修改过)</p><p><code>find /home -mmin -120</code></p><p><code>-a</code> (and)</p><p><code>-o</code> (or)</p><hr><p><code>-type</code> 文件类型</p><p> <code>f</code> 二进制文件</p><p><code>l</code> 软连接文件</p><p><code>d</code> 目录</p><p><code>find /home -type d</code></p><p><code>find /home -type d -o -name li???</code></p><p><code>find /home -type d -exec ls -l {}\;</code><br>查看文件详细信息</p><p>删除特殊文件名：<code>rm -rf &quot;a b&quot;</code></p><p>或者<code>find . inum 156 -exec rm {} \;</code></p><hr><p>locate file</p><p><code>grep 关键词 路径</code></p><hr><p><code>man</code> 命令（help）</p><p><code>info</code> 命令（类似man）</p><p><code>whatis ls</code></p><h1 id="三、压缩包"><a href="#三、压缩包" class="headerlink" title="三、压缩包"></a>三、压缩包</h1><ol><li>命令名称：<code>gzip 文件名</code></li></ol><p>只能压缩文件，并且不保留原文件</p><ol><li>解压</li></ol><p><code>gunzip 文件名</code></p><p><code>gzip -d 文件名</code></p><p>3.<code>tar</code>:把目录打包成文件</p><p><code>-c</code> 产生.tar打包文件</p><p><code>-z</code> 打包同时压缩</p><p><code>-f</code> 指定压缩后的文件名</p><p><code>-v</code> 显示详细信息</p><p><code>tar -zcvf newname oldname</code></p><p><code>file 文件名</code>:查看文件属性，判断是不是压缩包</p><hr><p>可压缩目录<br><code>zip -r test.zip test(保存源文件)</code></p><p><code>unzip</code>:解压</p><hr><p><code>.bz2(-k保留原文件)</code></p><p>压缩:<code>bzip2 nnew.bz2 new</code></p><p>解压:<code>bunzip2</code></p><hr><p>3.<code>write</code>可通讯</p><pre><code>write lijie  这里可以直接写内容</code></pre><p><code>ctrl+d</code>结束</p><hr><p><code>wall(write all 写给所有人)</code></p><hr><p><code>ping 192.168.137.1</code></p><p><code>ping -s 5220 ip</code>；发包</p><p><code>ping -c 6(显示次数) ip</code></p><hr><p>shell应用</p><p>bash</p><p><code>clear=ctrl+l</code></p><p><code>ctrl+u</code>(删除之前的命令)</p><hr><p>命令定义别名</p><p><code>alias new=old</code></p><p><code>alise drm=&quot;rm -rf&quot;</code></p><p>删除别名:<code>unalise</code></p><hr><h1 id="四、输入输出重定向-0输入，1输出，2出错信息"><a href="#四、输入输出重定向-0输入，1输出，2出错信息" class="headerlink" title="四、输入输出重定向(0输入，1输出，2出错信息)"></a>四、输入输出重定向(0输入，1输出，2出错信息)</h1><p>输出：<code>ls -l /home &gt; /home/log</code></p><p>还可以追加:<code>ls -l /home &gt;&gt; /home/log</code></p><p>输入：<code>wall &lt; /home/log</code></p><hr><p>管道（|）：将一个命令的输出传送给另一个命令，作为另一个命令的输入。</p><p><code>命令1 | 命令2 | 命令n</code></p><p><code>ls -l /etc | more</code></p><p><code>ls -l /etc | grep init</code></p><p><code>ls -l /etc | grep init | wc -l</code></p><hr><p>命令连接符；</p><p><code>ls;date;pwd</code></p><p>逻辑与</p><pre><code>命令1 &amp;&amp; 命令2 √          √ ×          ×</code></pre><p><code>ls &amp;&amp; pwd</code></p><p>逻辑或（类似非）  ||</p><pre><code>命令1 || 命令2 ×          √ √          ×</code></pre><hr><p>命令替换符： 命令1 `命令2`</p><p>将一个命令的输出作为另一个命令的参数</p><p>ls -l `which touch`</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、文件操作和权限管理&quot;&gt;&lt;a href=&quot;#一、文件操作和权限管理&quot; class=&quot;headerlink&quot; title=&quot;一、文件操作和权限管理&quot;&gt;&lt;/a&gt;一、文件操作和权限管理&lt;/h2&gt;&lt;p&gt;1.只有root能执行的命令，在/sbin或/usr/sbin下（sbinsuper binary）&lt;/p&gt;
&lt;p&gt;2.所有用户：在/bin或/usr/bin下&lt;br&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow学习笔记</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/14/Tensorflow%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/14/Tensorflow学习笔记/</id>
    <published>2018-04-14T15:15:07.000Z</published>
    <updated>2018-04-14T15:15:07.514Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C/C++及Python的自定义引包</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/14/C-C-%E5%8F%8APython%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%95%E5%8C%85/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/14/C-C-及Python的自定义引包/</id>
    <published>2018-04-14T13:09:57.000Z</published>
    <updated>2018-04-14T15:00:05.111Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、C-C-的自定义头文件引用"><a href="#一、C-C-的自定义头文件引用" class="headerlink" title="一、C/C++的自定义头文件引用"></a>一、C/C++的自定义头文件引用</h1><ul><li>为什么要写这篇文章呢？</li></ul><blockquote><p>当我们用C/C++写程序时，头文件引用每次都会用到<code>#include &lt;stdio.h&gt;</code>或<code>#include &lt;iostream&gt;</code>，并且这个头文件还放在编译软件内部，需要自己去找，一般放在include包含头文件的地方。</p></blockquote><a id="more"></a><p>这里简单进行举例，比如vc6.0中上面两个头文件的位置<br><img src="http://p6hlch5jf.bkt.clouddn.com/vc_stdio.h.png" alt="stdio.h"></p><p>都在include文件下<br><img src="http://p6hlch5jf.bkt.clouddn.com/vc_iostream.png" alt=""></p><p>而Dev_C++的不在一起</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/dev_stdio.h.png" alt="stdio.h"></p><p><img src="http://p6hlch5jf.bkt.clouddn.com/dev_iostream.png" alt="iostream"></p><p>以下以Dev_C++为例，因为它的编译器是gcc和g++，使用较为方便</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/stdio_code.png" alt="这是头文件的代码，挺多的"><br><code>这是头文件的代码，挺多的</code></p><ul><li>需要了解多文件编译链接的话，可以看看我的这篇博客<a href="https://ljgithub669.github.io/2018/03/23/gcc%E7%BC%96%E8%AF%91%E9%93%BE%E6%8E%A5/" target="_blank" rel="noopener">gcc编译链接</a></li></ul><p><strong>好了，现在开始进入正题：</strong></p><p>1.一般一个功能模块都是用<code>name.h</code>和<code>name.c</code>两个文件来完成的，.h文件中写函数声明和定义，.c文件中写函数的主体。调用时只需要include头文件即可。自定义头文件的话，我们可以把函数主体和定义声明写在同一个.h文件里。（开始我也好奇既然可以写在一个文件里，那为什么要分开写呢？原来当一个工程项目很大是，出现错误时可以更精准的定位，便于维护）。</p><p>2.首先我们写一个头文件<code>fun.h</code></p><pre><code>#include &lt;stdio.h&gt;int fun();    //进行函数声明int fun()     //函数主体.{    printf(&quot;Your first head file.\n&quot;);    printf(&quot;Bye!&quot;);}</code></pre><p>3.然后再写个主函数main.c</p><pre><code>#include &lt;stdio.h&gt;#include &quot;fun.h&quot;int main(){    fun();     //调用定义的函数    printf(&quot;Just do it!\n&quot;);    return 0;}</code></pre><p>4.我们把这个<code>fun.h</code>放在和<code>stdio.h</code>相同的路径下，不就可以随时在机器上使用这个头文件了吗。<br>将代码粘贴到include路径下，如下：</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/fun.h.png" alt=""></p><p>然后在DOS下cd进入main.c所在文件夹，gcc进行编译（这里提示一下，gcc编译经常会出现报错，解决方法是在最后一行加上空格，其实就是报错的原因，仔细看能看懂）</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/gcc_zidingyi_.h_.png" alt=""><br>运行a.exe<br><img src="http://p6hlch5jf.bkt.clouddn.com/gcc_run_.h_.png" alt=""><br>以为预处理命令要在include文件夹下找一遍，直到发现fun.h，所以运行时有些慢</p><ul><li><strong>后期可以随便发挥</strong></li></ul><h1 id="二、Python自定义引包import-package-name"><a href="#二、Python自定义引包import-package-name" class="headerlink" title="二、Python自定义引包import package_name"></a>二、Python自定义引包<code>import package_name</code></h1><p>1.其实原理和C/C++一样，就是有些地方不同</p><p>我们来写一个自己的python包，结构是这样的</p><pre><code>---package    ---__init__.py    dog        ---__init__.py        ---module1.py        ---module2.py    cat        ---__init__.py        ---module1.py        ---module2.py            </code></pre><p>这个结构的意思是：我们创建了一个包名称<code>package</code>，也就是一个文件夹，在文件夹内，分别有<code>---__init__.py</code>,<code>dog</code>,<code>cat</code>这三个文件，<code>cat</code>和<code>dog</code>下又分别有<code>---__init__.py</code>,<code>---module1.py</code>,<code>---module2.py</code>这三个文件，也就是我们的函数代码。</p><p>关于<code>---__init__.py</code>存在的意义，请自行谷歌，那里有更专业的回答。</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/python_import.png" alt=""><br>这是存储的内容</p><p>2.接下来把这个<code>package</code>放到python下的Lib/site-packages里即可。</p><p>3.写一个python的main.py进行调用，我们需要这样引入<code>from package.dog.module1 import fun1</code>,main.py代码如下：</p><pre><code>from package.dog.module1 import fun1fun1</code></pre><p>这样即可，python就是十分简短，需要引用其他module可以自行引入。</p><p>4.接下来实际展示，感兴趣的话可以自己操作。</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/python_run.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、C-C-的自定义头文件引用&quot;&gt;&lt;a href=&quot;#一、C-C-的自定义头文件引用&quot; class=&quot;headerlink&quot; title=&quot;一、C/C++的自定义头文件引用&quot;&gt;&lt;/a&gt;一、C/C++的自定义头文件引用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;为什么要写这篇文章呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;当我们用C/C++写程序时，头文件引用每次都会用到&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/code&gt;或&lt;code&gt;#include &amp;lt;iostream&amp;gt;&lt;/code&gt;，并且这个头文件还放在编译软件内部，需要自己去找，一般放在include包含头文件的地方。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>argc和argv</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/05/argc%E5%92%8Cargv/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/05/argc和argv/</id>
    <published>2018-04-04T16:12:54.000Z</published>
    <updated>2018-07-31T11:48:22.070Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>基于此文章：<a href="http://mp.weixin.qq.com/s/l3WgCfgQUjv2hyuqD-BScg" target="_blank" rel="noopener">探究argc与argv的鱼与渔</a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="0" height="0" src="http://music.163.com/m/song?id=496774187&userid=590854430"><br></iframe> <h2 id="一、含义解读"><a href="#一、含义解读" class="headerlink" title="一、含义解读"></a>一、含义解读</h2><ul><li><p><strong>argc:</strong>读作arg C,是argument counter的缩写，意思是参数计数器。</p></li><li><p><strong>argv:</strong>读作arg V，是argument vector的缩写，vector是数组的意思，合起来意思是参数组成的数组。</p></li></ul><a id="more"></a><h2 id="二、来源"><a href="#二、来源" class="headerlink" title="二、来源"></a>二、来源</h2><ul><li>出现在C/C++里，在<code>int main(int argc,char *argv[])</code>里。</li><li>python中也有出现</li></ul><h2 id="三、用法"><a href="#三、用法" class="headerlink" title="三、用法"></a>三、用法</h2><p>1.使用时需要用到命令行，即输入<code>.exe</code>文件，空格，参数。例如：<code>a.exe kk5 21ao 深度</code>,内容可以随便输入。</p><p>2.具体操作：</p><blockquote><blockquote><blockquote><p>编辑代码</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>g++编译</p></blockquote><p>命令行运行</p></blockquote><p>3.代码如下：</p><pre><code>#include&lt;iostream&gt;using namespace std;    int main(int argc,char *argv[]){    cout&lt;&lt;&quot;argc is: &quot;&lt;&lt;argc&lt;&lt;endl;                 //A    for(int i=0;i&lt;argc;i++)    {        cout&lt;&lt;&quot;argv[&quot;&lt;&lt;i&lt;&lt;&quot;]=&quot;&lt;&lt;argv[i]&lt;&lt;endl;     //B    }return 0;}</code></pre><p>名称命名为<code>argc.cpp</code>，A输出结果为输入字符串的个数，B输出结果为每个字符串的单独显示。</p><p>四、运行过程的图片</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/argc_argv.png" alt=""></p><p>我用gcc编译会报错，但gcc编译c语言没问题，所以就用了g++。</p><p>————-更2018.7.31————–<br>补充<code>char ** argv</code>读取指定图片</p><pre><code>#include&lt;iostream&gt;#include&lt;opencv2/opencv.hpp&gt;using namespace cv;int main(int argc,char ** argv){    Mat img = imread(argv[1]);        imshow(&quot;图片&quot;,img);    waitKey(0);    system(&quot;pause&quot;);    return 0;}</code></pre><p>命令行输入<code>*.exe 1.jpg</code>即可打开图片</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于此文章：&lt;a href=&quot;http://mp.weixin.qq.com/s/l3WgCfgQUjv2hyuqD-BScg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;探究argc与argv的鱼与渔&lt;/a&gt;&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;0&quot; height=&quot;0&quot; src=&quot;http://music.163.com/m/song?id=496774187&amp;userid=590854430&quot;&gt;&lt;br&gt;&lt;/iframe&gt; 

&lt;h2 id=&quot;一、含义解读&quot;&gt;&lt;a href=&quot;#一、含义解读&quot; class=&quot;headerlink&quot; title=&quot;一、含义解读&quot;&gt;&lt;/a&gt;一、含义解读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;argc:&lt;/strong&gt;读作arg C,是argument counter的缩写，意思是参数计数器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;argv:&lt;/strong&gt;读作arg V，是argument vector的缩写，vector是数组的意思，合起来意思是参数组成的数组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Avatar</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/03/Avatar/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/03/Avatar/</id>
    <published>2018-04-03T15:01:56.000Z</published>
    <updated>2018-07-09T15:22:26.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://p6hlch5jf.bkt.clouddn.com/avatar%281%29.jpg" alt=""></p><blockquote><p>蓝色的星球—潘多拉<br>梦中的世界—阿凡达<br>同样的蔚蓝，同样的翠色，充满野性的山，奇异魅惑的动物植物，充满希望，充满光芒······<br><a id="more"></a></p></blockquote><p>初中时第一次看这部电影，当时在电视上看到，翻译是《阿凡达》，让我联想到了阿凡提，因此没勾起我的兴趣，后来一次单独从开头看，完全被它的异域景致所折服，从头看到尾，绚丽的画面将我深深吸引。</p><p>从那时起，我便开始搜寻它的简介，了解它的历史。</p><p>潘多拉，美丽与灾难的代名词，为了资源，人类大肆开垦掠夺。外星的精彩，在人类的蹂躏下，那里将又会是一片火海。</p><p>我最喜欢电影里的自由，无拘无束，山、瀑、林、兽、无边无际，峭奇瑰丽。<br><img src="http://p6hlch5jf.bkt.clouddn.com/avatar%2811%29.png" alt="悬浮山"></p><p>夜晚的潘多拉，更是梦的天堂，荧光的植物，惊艳无比<br><img src="http://p6hlch5jf.bkt.clouddn.com/avatar%288%29.png" alt="夜幕下的植被"></p><p>天空，更是另一片天堂<br><img src="http://p6hlch5jf.bkt.clouddn.com/avatar%28sky%29.png" alt="天空"></p><p>当然，爱情也是必不可少的元素<br><img src="http://p6hlch5jf.bkt.clouddn.com/avatar%287%29.jpg" alt="爱情"></p><blockquote><p>活的如此自由</p><p>属于大地</p><p>属于天空</p><p>浸入心脾的满足</p><p>也便无憾</p></blockquote><p>这里插入电影的<strong>MV《I see you》</strong></p><iframe height="300" width="350" src="http://music.163.com/m/mv?id=31674&userid=590854430" frameborder="0" allowfullscreen><br><br></iframe> <p>————————————————————————更2018.7.9————————————————————————————<br>昨天又温习了一遍阿凡达，还是震撼人心，又看到了许多细节，虽然是虚幻，但又显得如此真实。</p><p>该反抗的时候必须要反抗，不反抗，对方只会得寸进尺，不会有丝毫同情，世界很残酷，需要用强大的内心去战胜。改变都是有所牺牲的，无论如何，有得有失。</p><p>既然选择了，就一次做好，尽自己最大的努力，人生没有给你第二次重来的机会，把握好，只此一次。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p6hlch5jf.bkt.clouddn.com/avatar%281%29.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;蓝色的星球—潘多拉&lt;br&gt;梦中的世界—阿凡达&lt;br&gt;同样的蔚蓝，同样的翠色，充满野性的山，奇异魅惑的动物植物，充满希望，充满光芒······&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工的购买及使用</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/01/%E6%90%AC%E7%93%A6%E5%B7%A5%E7%9A%84%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/04/01/搬瓦工的购买及使用/</id>
    <published>2018-04-01T03:17:28.000Z</published>
    <updated>2018-04-16T10:50:38.504Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、概念的理解"><a href="#一、概念的理解" class="headerlink" title="一、概念的理解"></a>一、概念的理解</h1><p>1.搬瓦工就是一个主机，你可以通过网络进行访问，但这个物理主机位置可能很远，比如在洛杉矶，通过这台主机，你就可以访问国内被限制的网址。</p><p>2.搬瓦工的流量计算方式：通过这个主机，你可以下载你需要的文件，这个过程产生流量，包括上传和下载流量。还有一个问题是本地主机没网可以通过搬瓦工下载东西吗？当然不行，你需要通过网络才能与你的搬瓦工主机进行操作的通讯，操作过程的速度和你本地主机的网络有关，但当搬瓦工主机下载东西时，速度就很稳定，也很快—&gt;这取决于你购买的主机配置。<br><img src="http://p6hlch5jf.bkt.clouddn.com/haitan.jpg" alt=""></p><a id="more"></a><p>3.例如我的搬瓦工主机配置，运存512M，硬盘10G，月流量500G，年费29.9刀，邀请码后大概177元。有些贵，不过是最便宜的了，之前的年费2.99,4.99,9.99都没有了，最便宜的19.99也缺货，看样子补货也不知道在什么时候，有的话尽快下手。<br>4.<strong>搬瓦工和云主机的区别</strong>：刚开始不知道，查了资料才大概了解，云主机（例如阿里云、腾讯云）是搬瓦工的升级版，搬瓦工有实际的物理主机存在，云主机没有；搬瓦工主机出错的概比云主机大，换句话说，云主机更稳定。</p><h1 id=""><a href="#" class="headerlink" title=""></a><img src="http://p6hlch5jf.bkt.clouddn.com/b0f075fcaec597c141ddad8988581b65.jpg" alt="网络--联通世界"></h1><h1 id="二、搬瓦工购买"><a href="#二、搬瓦工购买" class="headerlink" title="二、搬瓦工购买"></a>二、搬瓦工购买</h1><p>网上教程确实很全，这里我发几个比较全的</p><ul><li><a href="https://bwh1.net/register.php" target="_blank" rel="noopener">搬瓦工官网</a></li></ul><ul><li><p><a href="https://blog.csdn.net/nanalinlinlin/article/details/54667735" target="_blank" rel="noopener">搬瓦工购买教程</a></p></li><li><p><a href="https://weibo.com/ttarticle/p/show?id=2313501000014216775825827948" target="_blank" rel="noopener">搬瓦工没有ss按钮解决方法</a></p></li><li><p><a href="http://www.bawagon.com/linuxvps%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/" target="_blank" rel="noopener">登录后Linux的相关命令大全</a></p><p><strong>购买过程有些问题需要注意：</strong></p></li></ul><ol><li>先选择购买，后填写信息，可能被墙的原因，如果一开始就注册，会不成功（自己试过不可以）。</li><li>填写的信息中，邮箱、电话号码、所在国籍（这个最好真实，否则后期可能被视为欺诈），这三个填真实信息，其他类似于姓名之类的都可以随便填。</li><li>购买后会有邀请码打折那个环节，我减少了1.8刀，大概10几元，能少就好（笑）。</li></ol><h1 id="三、登录"><a href="#三、登录" class="headerlink" title="三、登录"></a>三、登录</h1><p>登录需要的信息如下：</p><ul><li><p>IP地址</p></li><li><p>端口号</p></li><li><p>root密码</p></li><li><p>加密方式</p></li></ul><p>这些信息最好记下，因为经常要用。</p><hr><p>暂时先写这里，吃饭啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、概念的理解&quot;&gt;&lt;a href=&quot;#一、概念的理解&quot; class=&quot;headerlink&quot; title=&quot;一、概念的理解&quot;&gt;&lt;/a&gt;一、概念的理解&lt;/h1&gt;&lt;p&gt;1.搬瓦工就是一个主机，你可以通过网络进行访问，但这个物理主机位置可能很远，比如在洛杉矶，通过这台主机，你就可以访问国内被限制的网址。&lt;/p&gt;
&lt;p&gt;2.搬瓦工的流量计算方式：通过这个主机，你可以下载你需要的文件，这个过程产生流量，包括上传和下载流量。还有一个问题是本地主机没网可以通过搬瓦工下载东西吗？当然不行，你需要通过网络才能与你的搬瓦工主机进行操作的通讯，操作过程的速度和你本地主机的网络有关，但当搬瓦工主机下载东西时，速度就很稳定，也很快—&amp;gt;这取决于你购买的主机配置。&lt;br&gt;&lt;img src=&quot;http://p6hlch5jf.bkt.clouddn.com/haitan.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Linux的诞生</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/27/Linux%E7%9A%84%E8%AF%9E%E7%94%9F/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/27/Linux的诞生/</id>
    <published>2018-03-27T04:41:50.000Z</published>
    <updated>2018-04-02T15:35:33.154Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>摘自微信公众号</p></blockquote><ul><li><p>你知道Linux系统有多牛吗？</p></li><li><p>迄今为止，在全球范围内：</p></li><li><p>80%以上的智能手机用的都是基于Linux内核的Android系统。</p></li><li><p>全球超级计算机排名前500中有98%都在用Linux，包括中国制造、世界超算第一的神威太湖之光。</p></li></ul><a id="more"></a><ul><li><p>全球大部分证券交易市场都在用Linux，包括纽交所、纳斯达克、伦敦证券交易所、东京证券交易所等</p></li><li><p>75%的云计算企业报告平台都用Linux</p></li><li><p>全球主机行业有33.8%的服务器都用Linux，而Windows 系统服务器只占7.3%。</p></li><li><p>包括亚马逊、易趣网、沃尔玛等电子商务平台都在用Linux……</p></li><li><p>换句话说，当今世上大部分的软件和服务都运行在Linux 操作系统之上，各种云计算、大数据、移动互联网，说起来吊炸天，但如果没有Linux，一切都是浮云。</p></li></ul><p>但你肯定想象不到，如此牛到天际的系统却是李纳斯·托沃兹（后文简称“李纳斯”）在经历各种纠结与挣扎之后的无奈发明。</p><p><strong>酷爱编程的Linux之父</strong></p><p>李纳斯1969年出生于芬兰赫尔辛基，十岁时因外祖父是大学统计学教授的缘故，得以接触计算机。那是一台Commodore VIC-2，在当时为世界上第一批廉价的8位家用电脑。这台电脑除了用Basic语言写程序之外别无它用。起初他只是将外祖父写在纸上的程序录入电脑，但是他天资聪颖，喜欢钻研，帮祖父录完程序后，就开始阅读电脑手册，写里面的示范程序，示范程序写完了，就自己编写程序。</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/pc.jpg" alt="他第一次接触电脑"></p><p> 一段时间后，他又开始琢磨电脑是怎样工作的，以及思索如何能让电脑运行得更快……</p><p>就这样三年过去了，在其他孩子都在滑雪、踢足球，进行各类户外游戏时，李纳斯却觉得外公的电脑更有意思了。</p><p>这时候的他已经进入了青春期，同龄的男孩子都在被窝里偷偷看playboy杂志，而他却总是在跟妈妈道完晚安之后再偷偷地从床上爬起来，然后打开电脑编程。</p><p>编程令他废寝忘食。他的妈妈逢人便说李纳斯是个很好养的孩子，一台电脑加一些意大利面条，就能让他心满意足。就是对女孩子不感兴趣这一点让他的父母非常担心。</p><p>他的爸爸给他买了一些模型飞机、轮船、汽车、铁路和模型火车等好玩的玩具，但这些东西远远比不上电脑对他有吸引力。他的父母并不限制他玩电脑，但是在对他的管教方面，却多了一个杀手锏，若是他不听话，只要剥夺他玩电脑的权利，他立马就怂。</p><p>上高中后，他的数学成绩非常优秀，那时的女孩子都特别希望能得到“数学天才”的辅导，于是他的父母就发现了让他对女孩子产生兴趣的办法，隔三差五催他带女孩子回家来辅导。</p><p>而他自然也是照做了，只是即便这样，直到高中毕业他也没弄明白同学间说的“深度爱抚”是什么意思。为此他特意花了不少时间照顾邻居家一只十五磅重的猫，然后认为“深度爱抚”也没有什么了不起的。</p><p>快乐不能久留，纠结与无奈常伴左右</p><p>后来Commodore VIC-2李纳斯已经玩得很溜了，便想买一台下一代的电脑。为此他攒了圣诞节和生日时父母给的奖励金，参加了赫尔辛基公司清洁队，当过邮差，再加上学校发的奖学金，在1987年的时候他成功地买下了一台Sinclair QL。</p><p>这是世界第一台32位家用计算机，采用摩托罗拉68008处理器，操作系统是Q-DOS。它的BASIC 语言非常先进，图形显示也不赖，且能进行多重任务处理。他用之做了大量编程，还编写了工具性程序。</p><p>但是令他无比纠结的是：VIC-2只有一个只读操作系统，无法重编程，而且虽说能进行多重任务处理，但在任何时候都会出现死机，也因为没有保存措施，只要一个任务出现差错，整个机子就死掉了。此外，给这台电脑购买配套设备是个无解的难题，因为他压根儿就找不到Sinclair QL电脑的产品目录！</p><p>第二年，他考上了赫尔辛基大学，主修计算机，数学和物理是辅修。这一年他没怎么写程序。主要是Sinclair QL毛病太多，让他没了心情。大学第二年，他有两个选择：要么在部队服八个月的兵役，要么从事一年的社会服务工作。他选择了去服兵役，因为他觉得在军队服役能更好玩一点。</p><p>服兵役也有两个选择：当一个普通大兵，服满要求的八个月或是去一所军官培训学校，当十一个月的军官。他选择了后者，因为他觉得当一名军官可能会更有意思。</p><p>1986年的时候386芯片横空出世，它在功能上完美地取代了68020，PC机开始受追捧。而等到1990年的时候，大规模生产使其价格大幅下跌，这让手头拮据的李纳斯看到了希望。</p><p>这一年，恰好他服完兵役回校，当时UNIX操作系统因稳定而强大的功能在学术界掀起了的风潮，学校也在这一年引入了UNIX系统，对此他兴奋不已。</p><p>虽然他没钱买386，但是他可以让自己的Sinclair QL通过终端仿真进入大学的UNIX电脑，等到有了足够的钱再买自己的也不迟。而UNIX系统果然没有令他失望，他重新在电脑这里找到了快乐。</p><p>1991年新年，他以分期付款的方式购买了一台组装PC机。内存他选择了4兆，最大的；CPU他选择了33 兆赫，最好的。不过这台电脑自带的MS-DOS 操作系统让李纳斯很是无奈，因为这套系统甚至无法利用386芯片极大提升的性能。曾经沧海难为水，享受过UNIX的美好，叫他如何还能容忍DOS的low？</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/unix.jpg" alt=""></p><p>他打心眼里想给这台电脑装UNIX，但不幸的是（却是世界之幸），UNIX太贵了，他完全负担不起！当时MINIX软件，作为UNIX的一个小型克隆也很受人们的追捧，而且价格比UNIX要低很多，他便退而求其次，购买了MINIX软件。而正是他的这一举动，最终促成了Linux后来的诞生！</p><p>MINIX软件从订购到拿到手李纳斯用了一个月的时间，但那时的他却感觉如同过了六年一般漫长，他花了大量时间去仔细了解它的功能和用途，最后他成功了解了它好的方面，却在同时也了解了它不好的方面。但最让他不能接受的是，MINIX的终端仿真做得太糟糕了。要知道那时的他只有依赖终端仿真，才能让家里的电脑模仿大学的电脑，从而享受UNIX的强大与稳定。这样的缺陷对他而言简直就是致命的！</p><p>在饱受一番折磨之后，他痛定思痛，最终决定：自己做一个终端仿真！</p><p><strong>Linux 诞生！</strong></p><p>这是李纳斯人生中的第一台PC，要做终端仿真，他需要学习很多东西。他从 BIOS 开始学习，了解 CPU 的工作原理，了解怎样写入显示器、怎样读键盘输入、怎样读写调制解调器……后来他想出两条独立的线程：一条线程从调制解调器读出，然后在显示器上显示；另一条线程从键盘上读出，然后写入调制解调器。</p><p>他写的最早的试验程序是使用一个线程将字母 A 写到显示器上，另一个线程写B。最后他就能改变由一连串 A 和一连串 B 组成的两个线程，使数据一个读自调制解调器，再写入显示器，另一个读自键盘，再写入调制解调器。到这时，他的终端仿真程序正式宣告制作成功！  </p><p><img src="http://p6hlch5jf.bkt.clouddn.com/make_it.jpg" alt=""></p><p>成功之后的那种发自内心的喜悦自然难以言喻。凭借自己的终端仿真器，他经常登录学校的电脑上，查阅电子邮件和参加 MINIX 讨论组。但是好景不长，他很快又发现了一个新问题，那就是：他无法下载和上传东西！也就是说，他必须能够向磁盘里保存东西。若要实现这个功能，他的终端仿真器必须装个磁盘驱动，外加一个文件系统驱动！ </p><p> 这个时候，即便李纳斯极度渴望这个功能，也未免有些泄气了，因为做这些实在是太麻烦了！也不值得。</p><p>只是没过多久他就改变了主意，因为他发现：除此之外他没有什么可做的！大学课程非常简单，无需费太多的心思，同学聚会也让他提不起精神，而搞驱动程序的工作虽然很麻烦，但却很有意思！</p><p>于是，他开始了写磁盘驱动程序的艰苦生涯。每天睁开眼睛后第一件事——编程，饿了就嚼饼干，嚼完继续编程，困了就睡会儿，醒来继续编程，洗澡也就冲冲了事，冲完澡继续编程……没了白天和夜晚，分不清周末还是工作日，电脑之外的世界几乎与他绝缘，在这场马拉松式的编程中，某一天他突然意识到：这项工作已经不再是优化一个终端仿真器，而是再造一个操作系统！</p><p>Linux 操作系统就是这样开始的，而他的试验程序则变成了终端仿真组合程序。</p><p>又经过数个月的努力之后，外壳程序开发完成，这个时候的他感觉便如创世之时的上帝，只待说出“要有光”一样执掌一切。当他把外壳程序移到一个他为新的操作系统所建的特别区域中后，一个新的操作系统宣告了诞生！他将其命名为“Linux”！</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/linux.jpg" alt=""></p><p>然后，他毫不犹豫地就将Linux发布出去了，因为他一直有与人交流程序的习惯。</p><p>在那时的PC世界中，有一个有关软件共享的传统，就是你下载了一个程序，就应该给作者寄回十块钱左右的回报。但李纳斯并不想要钱，他只想要明信片，因为与钱相比，他更想知道都有哪儿的人在使用 Linux，结果他收到了逾百万张明信片。</p><p>而他当初买电脑时的欠款则在一个朋友的帮助下，成功地从一项网上募捐行动中得到了解决……为嘛这事儿听起来这么有喜感？</p><p>但是这时候的Linux并未脱离MINIX而存在，似乎上帝对这样的结果仍不满意，便推了他一把：他在接下来的某一天出现操作失误，将MINIX分区破坏了！这个时候他可以选择重装MINIX，也可以通过完善Linux来彻底取代MINIX。他选择了后者，因为他觉得Linux已经足够好。</p><p>于是，从这时起，人们开始用Linux来做些事了。</p><p>因为开源的缘故，Linux 的用户开始与日俱增，获得了巨大的发展，世界各地的程序员们每天都在共同分享彼此提出的修改建议。</p><p>从1991年开始至今，Linux内核由10239行代码增加到了近1千万行代码，其中只有2%出自李纳斯之手。而且每天仍会新增约4752行代码，且有1671行代码会做出变更。</p><p>李纳斯喜欢有这么多的人给他从事这个事业的动力，他曾认为自己已接近于完成它了，但却始终没有真正做到这一点。人们一直给李纳斯更多继续的理由，以及更多困扰的棘手难题，这使得继续完善 Linux 变得更为有趣。否则，他可能早就干别的事情去了。</p><p>这并非耸人听闻的言论，而是李纳斯亲口所说。</p><p>生活的终极目标是快乐</p><p>李纳斯并不是离不开电脑，也不是离不开Linux。</p><p>早年上高中的时候，就因为感到有些课程比较有趣，比方说影响经济的因素，季风及季风成因等，可以让他放下了电脑去啃书本。</p><p>在与现任妻子塔芙同居的最初两周，他甚至都没有动过一下电脑，但他也并不为离开电脑而感到难受。</p><p>大学时期服兵役一年，离开电脑一年之久，他也没有对其有任何想念。</p><p>他曾花了数小时为他的宝马Z3选择合适的颜色而苦思冥想。原因无他，仅仅是觉得有意思而已。</p><p>在他看来，生活的进化过程主要分为三个阶段：生存、社会秩序和娱乐，而娱乐是生活的最高形式。他说，“你可以为事业而奋斗，然而最终，生活的终极目标是快乐。”</p><p>编程是他的乐趣，写出Linux也是乐趣使然。在无数次追求快乐而不得的纠结与无奈过后，Linux才得以成功面世。他无心做出一个举世瞩目的产品，也无意打造自己的商业帝国。微软把Linux视为Windows操作系统最大的竞争对手，而Linux的拥趸则无时不刻不在网上发言声称：Linux终将取代Windows。</p><p>但他却丝毫不为此挂心，每天在自己的卧房里（很难想象那里就是举世瞩目的Linux全球总部）做着自己感兴趣的事——为Linux编程。</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/li_na_si.jpg" alt="linux之父"></p><p>-END- </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘自微信公众号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你知道Linux系统有多牛吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;迄今为止，在全球范围内：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;80%以上的智能手机用的都是基于Linux内核的Android系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全球超级计算机排名前500中有98%都在用Linux，包括中国制造、世界超算第一的神威太湖之光。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>音乐和视频</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/24/%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/24/音乐和视频/</id>
    <published>2018-03-24T12:06:44.000Z</published>
    <updated>2018-06-20T08:31:21.931Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>插入音乐</strong></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="350" height="500" src="http://music.163.com/song/449272168/?userid=590854430"><br></iframe> <p><em>代码如下</em></p><pre><code>&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=380 height=500   src=&quot;http://music.163.com/song/449272168/?userid=590854430&quot;&gt;  &lt;/iframe&gt; </code></pre><p><strong>插入视频</strong></p><p>《东风第一枝》 <em>视频很美，古风味十足，美景、美人、美哉！</em></p><iframe height="300" width="350" src=" http://music.163.com/video/4241F55E7A61DB3A42C68E28D6DA3FC8/?userid=590854430" frameborder="0" allowfullscreen><br></iframe> <p><em>代码如下</em></p><pre><code>&lt;iframe   height=300 width=380   src=&quot; http://music.163.com/video/4241F55E7A61DB3A42C68E28D6DA3FC8/?userid=590854430&quot;   frameborder=0 allowfullscreen&gt;  &lt;/iframe&gt; </code></pre><a id="more"></a><p>《黯然销魂》<em>同样的古风视频</em></p><iframe height="300" width="350" src=" http://music.163.com/video/3B063C5B989590037C41F5906E1676B2/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>《离人愁》<em>还有一首十分豪迈的歌</em></p><iframe height="300" width="350" src="http://music.163.com/video/DFE26E2731C306E256CE07B13140446B/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>《神话》<em>由胡歌和白冰主演，当初很喜欢的电视剧，追了挺久，后来很少播出，不过现在看起来依旧是韵味十足。</em></p><iframe height="300" width="350" src="http://music.163.com/video/E38F7D8B66B4C7AD0885692159ED92A9/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><h1 id="仙剑系列"><a href="#仙剑系列" class="headerlink" title="仙剑系列"></a>仙剑系列</h1><p>1.《光棍》</p><iframe height="300" width="350" src="http://music.163.com/mv/58521/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>2.《生生世世爱》</p><iframe height="300" width="350" src="http://music.163.com/mv/5364614/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>3.《偏爱》</p><iframe height="300" width="350" src="http://music.163.com/video/777BA41A18BE84BAECDC2B31FAFCF45E/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>4.《莫失莫忘》<em>仙剑一</em></p><iframe height="300" width="350" src="http://music.163.com/video/71B464F02ACA37DE3ADEC4B4506AA662/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><br>5.仙剑一<br><iframe height="300" width="350" src="http://music.163.com/video/83028C192EBEC07104715C7EE0C22BD1/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><hr><p>《safe and sound》</p><iframe height="300" width="350" src="http://music.163.com/m/mv?id=5466&userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>《今日我离别》</p><iframe height="300" width="350" src="http://music.163.com/video/C8DFB2A4B575EEE8FED9C7C118C3518B/?userid=590854430" frameborder="0" allowfullscreen><br></iframe><p>《我的将军啊》</p><iframe height="300" width="350" src="http://music.163.com/video/59F1FDBB50AF6D19A19E298B89B3449F/?userid=590854430" frameborder="0" allowfullscreen><br></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;插入音乐&lt;/strong&gt;&lt;/p&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;350&quot; height=&quot;500&quot; src=&quot;http://music.163.com/song/449272168/?userid=590854430&quot;&gt;&lt;br&gt;&lt;/iframe&gt; 

&lt;p&gt;&lt;em&gt;代码如下&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe frameborder=&amp;quot;no&amp;quot; border=&amp;quot;0&amp;quot; marginwidth=&amp;quot;0&amp;quot; marginheight=&amp;quot;0&amp;quot; width=380 height=500   
src=&amp;quot;http://music.163.com/song/449272168/?userid=590854430&amp;quot;&amp;gt;  
&amp;lt;/iframe&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;插入视频&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;《东风第一枝》 &lt;em&gt;视频很美，古风味十足，美景、美人、美哉！&lt;/em&gt;&lt;/p&gt;
&lt;iframe height=&quot;300&quot; width=&quot;350&quot; src=&quot; http://music.163.com/video/4241F55E7A61DB3A42C68E28D6DA3FC8/?userid=590854430&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;br&gt;&lt;/iframe&gt; 

&lt;p&gt;&lt;em&gt;代码如下&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe   
height=300 width=380   
src=&amp;quot; http://music.163.com/video/4241F55E7A61DB3A42C68E28D6DA3FC8/?userid=590854430&amp;quot;   
frameborder=0 allowfullscreen&amp;gt;  
&amp;lt;/iframe&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>gcc编译连接</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/23/gcc%E7%BC%96%E8%AF%91%E9%93%BE%E6%8E%A5/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/23/gcc编译链接/</id>
    <published>2018-03-23T12:08:57.000Z</published>
    <updated>2018-04-02T15:37:02.508Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="在Windows的DOS下实现gcc编译和链接"><a href="#在Windows的DOS下实现gcc编译和链接" class="headerlink" title="在Windows的DOS下实现gcc编译和链接"></a>在Windows的DOS下实现gcc编译和链接</h2><p>这里主要看的是两篇写的很详细的文章</p><a id="more"></a><p><a href="https://blog.csdn.net/candcplusplus/article/details/7317472" target="_blank" rel="noopener">C语言多文件编译初探（一）</a></p><p><a href="https://blog.csdn.net/candcplusplus/article/details/53326368" target="_blank" rel="noopener">C语言多文件编译初探（二）</a></p><hr><p>1.首先，你的Windows电脑的编译器需要是gcc,不清楚的话按<code>win+r</code>,输入cmd，打开DOS命令行界面。然后输入<code>gcc -v</code>,这个是用来查看你gcc版本的，如果提示不是内部或外部指令，则你的编译器不是gcc。反之，如果出现如下图片，则可以进行下一步了。<br><img src="http://p6hlch5jf.bkt.clouddn.com/gcc.png" alt="图片"></p><hr><p>2.如果没有gcc，可以通过下载Dev-C++,使用其bin下的gcc.exe。在环境变量中配置Dev_C++下的bin。</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/dev.png" alt="Dev_C++"></p><p>3.此时就可以在DOS中使用gcc了。gcc可以将c/c++文件编译为.o文件，然后链接生成可执行文件.exe。<br>4.接下来我们写两个源文件，一个头文件，用来模拟多文件编译过程。</p><pre><code>//创建一个main.c文件#include&lt;stdio.h&gt;int main(){fun();return 0;}</code></pre><p>–</p><pre><code>//创建一个fun.c文件,用来创建函数    #include&lt;stdio.h&gt;void fun(){int a=3,b=6;printf(&quot;%d+%d=%d&quot;,a,b,a+b);    }</code></pre><p>–</p><pre><code>//创建一个fun.h文件，用来声明fun()这个函数//这个就很简单void fun();</code></pre><p>5.接下来就到关键时刻了，先生成.o文件，命令是<code>gcc -c fun.c main.c</code>,前面<code>-c</code>是指只执行编译这一步，如果没有，就会直接生成.exe<br>文件。这里是为了便于理解。执行完这一步，会发现源代码文件夹下有<code>fun.o和main.o</code>这两个文件，这就是目标文件，即二进制文件。下一步链接就需要这两个目标文件。</p><p>6.链接命令是<code>gcc fun.o main.o</code>,这个默认生成的.exe文件是a.exe,如果觉得这样的名字不好，可以自己命名，只需要在后面加个-o name.exe即可。例如<code>gcc fun.o main.o -o mine.exe</code>,执行完后源代码目录下就会有.exe文件生产。最终所有文件如下：</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/list.png" alt=""></p><ul><li><strong>以上就是gcc编译链接多文件的流程</strong></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在Windows的DOS下实现gcc编译和链接&quot;&gt;&lt;a href=&quot;#在Windows的DOS下实现gcc编译和链接&quot; class=&quot;headerlink&quot; title=&quot;在Windows的DOS下实现gcc编译和链接&quot;&gt;&lt;/a&gt;在Windows的DOS下实现gcc编译和链接&lt;/h2&gt;&lt;p&gt;这里主要看的是两篇写的很详细的文章&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>车牌识别</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/20/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/20/车牌识别/</id>
    <published>2018-03-20T14:26:22.000Z</published>
    <updated>2018-04-02T15:33:12.600Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、车牌定位代码"><a href="#一、车牌定位代码" class="headerlink" title="一、车牌定位代码"></a>一、车牌定位代码</h1><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include &quot;opencv2\opencv.hpp&quot;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">using namespace cv;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">//定义，类似define</span><br><span class="line">string xmlPath = &quot;cascade.xml&quot;;</span><br><span class="line">//创建分类器对象</span><br><span class="line">CascadeClassifier ccf;   </span><br><span class="line">Mat img = imread(&quot;1.jpg&quot;);</span><br><span class="line">//加载训练文件</span><br><span class="line">if (!ccf.load(xmlPath))   </span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; &quot;不能加载指定的xml文件&quot; &lt;&lt; endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">//创建一个容器保存检测出来的车牌</span><br><span class="line">vector&lt;Rect&gt; faces;  </span><br><span class="line">Mat gray;</span><br><span class="line">//转换成灰度图，因为harr特征从灰度图中提取</span><br><span class="line">cvtColor(img, gray, CV_BGR2GRAY); </span><br><span class="line"> //直方图均衡行</span><br><span class="line">equalizeHist(gray, gray); </span><br><span class="line">//检测车牌</span><br><span class="line">ccf.detectMultiScale(gray, faces, 1.1, 3, 0, Size(1, 10), Size(1000, 1000)); </span><br><span class="line">imshow(&quot;chepai&quot;, faces);</span><br><span class="line">for (vector&lt;Rect&gt;::const_iterator iter = faces.begin();iter != faces.end();iter++)</span><br><span class="line">&#123;</span><br><span class="line">//画出车牌矩形</span><br><span class="line">rectangle(img, *iter, Scalar(0, 0, 255), 2, 8);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//imshow(&quot;rect&quot;, Rect);</span><br><span class="line">//resize(img, img, Size(1018, 550));</span><br><span class="line">imshow(&quot;plate&quot;, img);</span><br><span class="line">waitKey(0);</span><br><span class="line">return 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>结果如图</strong><br><img src="http://p6hlch5jf.bkt.clouddn.com/cpdw1.png" alt="c车牌定位"></p><hr><h1 id="二、车牌字符识别"><a href="#二、车牌字符识别" class="headerlink" title="二、车牌字符识别"></a>二、车牌字符识别</h1><hr><ul><li><p>代码参考来自:<a href="https://www.cnblogs.com/chenzhefan/p/7629441.html" target="_blank" rel="noopener">https://www.cnblogs.com/chenzhefan/p/7629441.html</a></p></li><li><p>由于他使用的OpenCV版比较早，有些语法功能有稍微改变，但具体思路很详细。</p></li></ul><h2 id="ANN模型训练"><a href="#ANN模型训练" class="headerlink" title="ANN模型训练"></a>ANN模型训练</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">void ann10(Mat&amp; testroi)</span><br><span class="line">&#123;</span><br><span class="line">   const string fileform = &quot;*.png&quot;;</span><br><span class="line">   const string perfileReadPath = &quot;E:\\vswork\\charSamples&quot;;</span><br><span class="line"></span><br><span class="line">   const int sample_mun_perclass = 50;//训练字符每类数量  </span><br><span class="line">   const int class_mun = 34;//训练字符类数 0-9 A-Z 除了I、O  </span><br><span class="line"></span><br><span class="line">   const int image_cols = 8;</span><br><span class="line">   const int image_rows = 16;</span><br><span class="line">   string  fileReadName,fileReadPath;</span><br><span class="line">   char temp[256];</span><br><span class="line"></span><br><span class="line">   float trainingData[class_mun*sample_mun_perclass][image_rows*image_cols] = &#123; &#123; 0 &#125; &#125;;//每一行一个训练样本  </span><br><span class="line">   float labels[class_mun*sample_mun_perclass][class_mun] = &#123; &#123; 0 &#125; &#125;;//训练样本标签  </span><br><span class="line"></span><br><span class="line">   for (int i = 0; i &lt;= class_mun - 1; i++)//不同类  </span><br><span class="line">   &#123;</span><br><span class="line">       //读取每个类文件夹下所有图像  </span><br><span class="line">        int j = 0;//每一类读取图像个数计数  </span><br><span class="line"></span><br><span class="line">        if (i &lt;= 9)//0-9  </span><br><span class="line">        &#123;</span><br><span class="line">            sprintf(temp, &quot;%d&quot;, i);</span><br><span class="line">            //printf(&quot;%d\n&quot;, i);  </span><br><span class="line">        &#125;</span><br><span class="line">        else//A-Z  </span><br><span class="line">        &#123;</span><br><span class="line">            sprintf(temp, &quot;%c&quot;, i + 55);</span><br><span class="line">            //printf(&quot;%c\n&quot;, i+55);  </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fileReadPath = perfileReadPath + &quot;/&quot; + temp + &quot;/&quot; + fileform;</span><br><span class="line">        cout &lt;&lt; &quot;文件夹&quot; &lt;&lt; fileReadPath &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        HANDLE hFile;</span><br><span class="line">        LPCTSTR lpFileName = StringToWchar(fileReadPath);//指定搜索目录和文件类型，如搜索d盘的音频文件可以是&quot;D:\\*.mp3&quot;  </span><br><span class="line">       WIN32_FIND_DATA pNextInfo;  //搜索得到的文件信息将储存在pNextInfo中;  </span><br><span class="line">       hFile = FindFirstFile(lpFileName, &amp;pNextInfo);//请注意是 &amp;pNextInfo , 不是 pNextInfo;  </span><br><span class="line">       if (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">       &#123;</span><br><span class="line">           continue;//搜索失败  </span><br><span class="line">       &#125;</span><br><span class="line">       //do-while循环读取  </span><br><span class="line">       do</span><br><span class="line">       &#123;</span><br><span class="line">           if (pNextInfo.cFileName[0] == &apos;.&apos;)//过滤.和..  </span><br><span class="line">              continue;</span><br><span class="line">           j++;//读取一张图  </span><br><span class="line">         //wcout&lt;&lt;pNextInfo.cFileName&lt;&lt;endl;  </span><br><span class="line">           //printf(&quot;%s\n&quot;,WcharToChar(pNextInfo.cFileName));  </span><br><span class="line">           //对读入的图片进行处理  </span><br><span class="line">           Mat srcImage = imread(perfileReadPath + &quot;/&quot; + temp + &quot;/&quot; + WcharToChar(pNextInfo.cFileName), CV_LOAD_IMAGE_GRAYSCALE);</span><br><span class="line">           Mat resizeImage;</span><br><span class="line">           Mat trainImage;</span><br><span class="line">           Mat result;</span><br><span class="line"></span><br><span class="line">           resize(srcImage, resizeImage, Size(image_cols, image_rows), (0, 0), (0, 0), CV_INTER_AREA);//使用象素关系重采样。当图像缩小时候，该方法可以避免波纹出现  </span><br><span class="line">           threshold(resizeImage, trainImage, 0, 255, CV_THRESH_BINARY | CV_THRESH_OTSU);</span><br><span class="line"></span><br><span class="line">           for (int k = 0; k&lt;image_rows*image_cols; ++k)</span><br><span class="line">           &#123;</span><br><span class="line">               trainingData[i*sample_mun_perclass + (j - 1)][k] = (float)trainImage.data[k];</span><br><span class="line">               //trainingData[i*sample_mun_perclass+(j-1)][k] = (float)trainImage.at&lt;unsigned char&gt;((int)k/8,(int)k%8);//(float)train_image.data[k];  </span><br><span class="line">               //cout&lt;&lt;trainingData[i*sample_mun_perclass+(j-1)][k] &lt;&lt;&quot; &quot;&lt;&lt; (float)trainImage.at&lt;unsigned char&gt;(k/8,k%8)&lt;&lt;endl;  </span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line">while (FindNextFile(hFile, &amp;pNextInfo) &amp;&amp; j&lt;sample_mun_perclass);//如果设置读入的图片数量，则以设置的为准，如果图片不够，则读取文件夹下所有图片  </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Set up training data Mat  </span><br><span class="line">    Mat trainingDataMat(class_mun*sample_mun_perclass, image_rows*image_cols, CV_32FC1, trainingData);</span><br><span class="line">    cout &lt;&lt; &quot;trainingDataMat——OK！&quot; &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    // Set up label data   </span><br><span class="line">    for (int i = 0; i &lt;= class_mun - 1; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        for (int j = 0; j &lt;= sample_mun_perclass - 1; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            for (int k = 0; k &lt; class_mun; ++k)</span><br><span class="line">            &#123;</span><br><span class="line">                if (k == i)</span><br><span class="line">                    if (k == 18)</span><br><span class="line">                    &#123;</span><br><span class="line">                        labels[i*sample_mun_perclass + j][1] = 1;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else if (k == 24)</span><br><span class="line">                    &#123;</span><br><span class="line">                        labels[i*sample_mun_perclass + j][0] = 1;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        labels[i*sample_mun_perclass + j][k] = 1;</span><br><span class="line">                    &#125;</span><br><span class="line">                else</span><br><span class="line">                    labels[i*sample_mun_perclass + j][k] = 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Mat labelsMat(class_mun*sample_mun_perclass, class_mun, CV_32FC1, labels);</span><br><span class="line">    cout &lt;&lt; &quot;labelsMat:&quot; &lt;&lt; endl;</span><br><span class="line">    ofstream outfile(&quot;out.txt&quot;);</span><br><span class="line">    outfile &lt;&lt; labelsMat;</span><br><span class="line">    //cout&lt;&lt;labelsMat&lt;&lt;endl;  </span><br><span class="line">    cout &lt;&lt; &quot;labelsMat——OK！&quot; &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    //训练代码  </span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; &quot;training start....&quot; &lt;&lt; endl;</span><br><span class="line">    CvANN_MLP bp;</span><br><span class="line">    // Set up BPNetwork&apos;s parameters  </span><br><span class="line">    CvANN_MLP_TrainParams params;</span><br><span class="line">    params.train_method = CvANN_MLP_TrainParams::BACKPROP;</span><br><span class="line">    params.bp_dw_scale = 0.001;</span><br><span class="line">    params.bp_moment_scale = 0.1;</span><br><span class="line">params.term_crit = cvTermCriteria(CV_TERMCRIT_ITER | CV_TERMCRIT_EPS, 10000, 0.0001);  //设置结束条件  </span><br><span class="line">   //params.train_method=CvANN_MLP_TrainParams::RPROP;  </span><br><span class="line">  //params.rp_dw0 = 0.1;  </span><br><span class="line">   //params.rp_dw_plus = 1.2;  </span><br><span class="line">  //params.rp_dw_minus = 0.5;  </span><br><span class="line">   //params.rp_dw_min = FLT_EPSILON;  </span><br><span class="line">   //params.rp_dw_max = 50.;  </span><br><span class="line"></span><br><span class="line">   //Setup the BPNetwork  </span><br><span class="line">   Mat layerSizes = (Mat_&lt;int&gt;(1, 5) &lt;&lt; image_rows*image_cols, 128, 128, 128, class_mun);</span><br><span class="line">   bp.create(layerSizes, CvANN_MLP::SIGMOID_SYM, 1.0, 1.0);//CvANN_MLP::SIGMOID_SYM  </span><br><span class="line">   //CvANN_MLP::GAUSSIAN  </span><br><span class="line">   //CvANN_MLP::IDENTITY  </span><br><span class="line">   cout &lt;&lt; &quot;training....&quot; &lt;&lt; endl;</span><br><span class="line">   bp.train(trainingDataMat, labelsMat, Mat(), Mat(), params);</span><br><span class="line"></span><br><span class="line">   bp.save(&quot;../bpcharModel.xml&quot;); //save classifier  </span><br><span class="line">   cout &lt;&lt; &quot;training finish...bpModel.xml saved &quot; &lt;&lt; endl;</span><br><span class="line">   return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="ANN-Predict"><a href="#ANN-Predict" class="headerlink" title="ANN+Predict"></a>ANN+Predict</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">void predictann(Mat testroi)</span><br><span class="line">&#123;</span><br><span class="line">   //测试神经网络 </span><br><span class="line">   CvANN_MLP bp;</span><br><span class="line">  bp.load(&quot;E:\\vswork\\CarNumRecog\\bpcharModel.xml&quot;);</span><br><span class="line">  const int image_cols = 8;</span><br><span class="line">   const int image_rows = 16;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; &quot;测试：&quot; &lt;&lt; endl;</span><br><span class="line">   //Mat test_image = imread(&quot;E:\\vswork\\charSamples\\3.png&quot;, CV_LOAD_IMAGE_GRAYSCALE);</span><br><span class="line">   Mat test_temp;</span><br><span class="line">   resize(testroi, test_temp, Size(image_cols, image_rows), (0, 0), (0, 0), CV_INTER_AREA);//使用象素关系重采样。当图像缩小时候，该方法可以避免波纹出现  </span><br><span class="line">   threshold(test_temp, test_temp, 0, 255, CV_THRESH_BINARY | CV_THRESH_OTSU);</span><br><span class="line">   Mat_&lt;float&gt;sampleMat(1, image_rows*image_cols);</span><br><span class="line">   for (int i = 0; i&lt;image_rows*image_cols; ++i)</span><br><span class="line">   &#123;</span><br><span class="line">       sampleMat.at&lt;float&gt;(0, i) = (float)test_temp.at&lt;uchar&gt;(i / 8, i % 8);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   Mat responseMat;</span><br><span class="line">   bp.predict(sampleMat, responseMat);</span><br><span class="line">   Point maxLoc;</span><br><span class="line">   double maxVal = 0;</span><br><span class="line">   minMaxLoc(responseMat, NULL, &amp;maxVal, NULL, &amp;maxLoc);</span><br><span class="line">   char temp[256];</span><br><span class="line"></span><br><span class="line">   if (maxLoc.x &lt;= 9)//0-9  </span><br><span class="line">   &#123;</span><br><span class="line">       sprintf(temp, &quot;%d&quot;, maxLoc.x);</span><br><span class="line">       //printf(&quot;%d\n&quot;, i);  </span><br><span class="line">   &#125;</span><br><span class="line">   else//A-Z  </span><br><span class="line">   &#123;</span><br><span class="line">       sprintf(temp, &quot;%c&quot;, maxLoc.x + 55);</span><br><span class="line">       //printf(&quot;%c\n&quot;, i+55);  </span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   cout &lt;&lt; &quot;识别结果：&quot; &lt;&lt; temp &lt;&lt; &quot;    相似度:&quot; &lt;&lt; maxVal * 100 &lt;&lt; &quot;%&quot; &lt;&lt; endl;</span><br><span class="line">  imshow(&quot;test_image&quot;, testroi);</span><br><span class="line">   waitKey(0);</span><br><span class="line"></span><br><span class="line">  return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、车牌定位代码&quot;&gt;&lt;a href=&quot;#一、车牌定位代码&quot; class=&quot;headerlink&quot; title=&quot;一、车牌定位代码&quot;&gt;&lt;/a&gt;一、车牌定位代码&lt;/h1&gt;&lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;quot;opencv2\opencv.hpp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace std;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using namespace cv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//定义，类似define&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	string xmlPath = &amp;quot;cascade.xml&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//创建分类器对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CascadeClassifier ccf;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Mat img = imread(&amp;quot;1.jpg&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//加载训练文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!ccf.load(xmlPath))   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cout &amp;lt;&amp;lt; &amp;quot;不能加载指定的xml文件&amp;quot; &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//创建一个容器保存检测出来的车牌&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	vector&amp;lt;Rect&amp;gt; faces;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Mat gray;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//转换成灰度图，因为harr特征从灰度图中提取&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cvtColor(img, gray, CV_BGR2GRAY); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 //直方图均衡行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	equalizeHist(gray, gray); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//检测车牌&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ccf.detectMultiScale(gray, faces, 1.1, 3, 0, Size(1, 10), Size(1000, 1000)); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	imshow(&amp;quot;chepai&amp;quot;, faces);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (vector&amp;lt;Rect&amp;gt;::const_iterator iter = faces.begin();iter != faces.end	();iter++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//画出车牌矩形&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rectangle(img, *iter, Scalar(0, 0, 255), 2, 8);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//imshow(&amp;quot;rect&amp;quot;, Rect);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//resize(img, img, Size(1018, 550));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	imshow(&amp;quot;plate&amp;quot;, img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	waitKey(0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>机器学习</title>
    <link href="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://p6hlch5jf.bkt.clouddn.com/dog.jpg/2018/03/20/机器学习/</id>
    <published>2018-03-20T05:08:11.000Z</published>
    <updated>2018-04-12T14:59:25.668Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、ANN、SVM模型训练及使用的代码"><a href="#一、ANN、SVM模型训练及使用的代码" class="headerlink" title="一、ANN、SVM模型训练及使用的代码"></a>一、ANN、SVM模型训练及使用的代码</h1><p><strong>提示：以下基于opencv3</strong></p><p><em>由于我没有接触过类似于Tensorflow的深度学习框架，所以下面了解的知识还比较片面。除TensorFlow外，深度学习的框架还有：Caffe、Keras、CNTK、Torch7、MXNet、Leaf、Theano、DeepLearning4、Lasagne、Neon，等等</em></p><p><a href="http://blog.csdn.net/xinyu3307/article/details/74979842" target="_blank" rel="noopener">关于用TensorFlow训练模型的文章</a><br><a href=""></a></p><a id="more"></a><hr><p><strong>opencv和Tensorflow的区别</strong></p><ol><li><p>OpenCV是计算机视觉库，Tensorflow是深度学习框架。</p></li><li><p>OpenCV包含了大量的图像处理和计算机视觉的算法，但是在机器学习方面明显不足，ML模块只有SVM，MLP（opencv的神经网络—多层感知器），kNN等有限的几种算法。dnn模块也是调用别的框架。</p></li><li><p>Tensorflow是专为深度学习而生，可以方便的实现各种深度学习算法。</p></li><li><p>二者不属于同一领域，做视觉用OpenCV，做深度学习用Tensorflow。或者二者结合做图像识别等等。</p></li></ol><hr><p><strong>ANN模型训练</strong></p><p><a href="https://www.cnblogs.com/farewell-farewell/p/6219689.html" target="_blank" rel="noopener">ANN模型使用参考</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">int ANN_TEST()</span><br><span class="line">&#123;</span><br><span class="line">// 540 x 360 矩阵（为输入图片的尺寸）</span><br><span class="line">int smpW = 540;</span><br><span class="line">int smpH = 360;</span><br><span class="line"></span><br><span class="line">// 每个样本数据对应的输出</span><br><span class="line">float labels[8] = &#123; 0,0,0,0,1,1,1,1 &#125;;   </span><br><span class="line">//第一个数据：标签个数   </span><br><span class="line">Mat labelsMat(8, 1, CV_32FC1, labels);</span><br><span class="line">cout &lt;&lt; labelsMat &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">// 训练样本  </span><br><span class="line">Mat trainMat(8, smpW * smpH, CV_32FC1);</span><br><span class="line">for (int i = 0; i &lt; 2; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = 1; j &lt; 5; j++)</span><br><span class="line">&#123;</span><br><span class="line">//批量读取图片，因为8张图片，故没有转化为.txt格式</span><br><span class="line">string path = format(&quot;%d%d.jpg&quot;, i, j);</span><br><span class="line">Mat img = imread(path, 0);</span><br><span class="line">if (img.empty())</span><br><span class="line">&#123;</span><br><span class="line">return 0;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">int index1 = i * 4 + j - 1;</span><br><span class="line">float * trainData = trainMat.ptr&lt;float&gt;(index1);</span><br><span class="line"></span><br><span class="line">for (int h = 0; h &lt; smpH; h++)</span><br><span class="line">&#123;</span><br><span class="line">uchar * imgData = img.ptr&lt;uchar&gt;(h);</span><br><span class="line">for (int w = 0; w &lt; smpW; w++)</span><br><span class="line">&#123;</span><br><span class="line">int index2 = h*smpW + w;</span><br><span class="line">trainData[index2] = imgData[w];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//模型创建和参数设置  </span><br><span class="line">Ptr&lt;ANN_MLP&gt; bp = ANN_MLP::create();</span><br><span class="line">//设置神经网络层数</span><br><span class="line">Mat layerSizes = (Mat_&lt;int&gt;(1, 5) &lt;&lt; smpW * smpH, 128, 128, 128, 1);</span><br><span class="line">bp-&gt;setLayerSizes(layerSizes);</span><br><span class="line">bp-&gt;setTrainMethod(ANN_MLP::BACKPROP, 0.1, 0.1);</span><br><span class="line">bp-&gt;setActivationFunction(ANN_MLP::SIGMOID_SYM);</span><br><span class="line">bp-&gt;setTermCriteria(TermCriteria(TermCriteria::MAX_ITER, 10000, /*FLT_EPSILON*/1e-6));</span><br><span class="line"></span><br><span class="line">// 保存训练好的神经网络参数  </span><br><span class="line">bool trained = bp-&gt;train(trainMat, ROW_SAMPLE, labelsMat);</span><br><span class="line">if (trained)</span><br><span class="line">&#123;</span><br><span class="line">bp-&gt;save(&quot;bp_param_bymyself.xml&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ANN模型调用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//创建并调用训练好的ANN神经网络</span><br><span class="line">Ptr&lt;ANN_MLP&gt; bp = ANN_MLP::load(&quot;bp_param.xml&quot;);</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; 2; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = 5; j &lt; 6; j++)</span><br><span class="line">&#123;</span><br><span class="line">Mat testMat(1, smpW * smpH, CV_32FC1);</span><br><span class="line">float * testData = testMat.ptr&lt;float&gt;(0);</span><br><span class="line">//读取图片</span><br><span class="line">string path = format(&quot;%d%d.png&quot;, i, j);</span><br><span class="line">Mat img = imread(path, 0);</span><br><span class="line">for (int h = 0; h &lt; smpH; h++)</span><br><span class="line">&#123;</span><br><span class="line">uchar * imgData = img.ptr&lt;uchar&gt;(h);</span><br><span class="line">for (int w = 0; w &lt; smpW; w++)</span><br><span class="line">&#123;</span><br><span class="line">int index2 = h*smpW + w;</span><br><span class="line">testData[index2] = imgData[w] * 1.0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Mat responseMat;</span><br><span class="line">//通过模型进行预测</span><br><span class="line">bp-&gt;predict(testMat, responseMat);</span><br><span class="line">float response = responseMat.ptr&lt;float&gt;(0)[0];</span><br><span class="line">cout &lt;&lt; response &lt;&lt; endl;</span><br><span class="line">float * data = responseMat.ptr&lt;float&gt;(0);</span><br><span class="line">cout &lt;&lt; data[0] &lt;&lt; endl;</span><br><span class="line">waitKey(10);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>SVM模型训练</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">int SVM()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">//训练2组数据，每组4帧</span><br><span class="line">int labels[8] = &#123;  0, 0, 0, 0, 1, 1, 1, 1 &#125;;</span><br><span class="line">Mat labelsMat(8, 1, CV_32SC1, labels);</span><br><span class="line"></span><br><span class="line">//样本宽高</span><br><span class="line">int smpW = 540;</span><br><span class="line">int smpH = 360;</span><br><span class="line"></span><br><span class="line">//将样本的值逐像素赋给训练图像</span><br><span class="line">Mat trainMat(8, smpW * smpH, CV_32FC1);</span><br><span class="line">for (int i = 0; i &lt; 2; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = 1; j &lt; 5; j++)</span><br><span class="line">&#123;</span><br><span class="line">string path = format(&quot;%d%d.jpg&quot;, i, j);</span><br><span class="line">Mat img = imread(path, 0);</span><br><span class="line">int index1 = i * 4 + j - 1;</span><br><span class="line">float * trainData = trainMat.ptr&lt;float&gt;(index1);</span><br><span class="line">for (int h = 0; h &lt; smpH; h++)</span><br><span class="line">&#123;</span><br><span class="line">uchar * imgData = img.ptr&lt;uchar&gt;(h);</span><br><span class="line">for (int w = 0; w &lt; smpW; w++)</span><br><span class="line">&#123;</span><br><span class="line">int index2 = h*smpW + w;</span><br><span class="line">trainData[index2] = imgData[w];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ptr&lt;SVM&gt; svm = SVM::create();</span><br><span class="line">svm-&gt;setType(SVM::C_SVC);</span><br><span class="line">svm-&gt;setKernel(SVM::LINEAR);</span><br><span class="line">svm-&gt;setTermCriteria(TermCriteria(TermCriteria::MAX_ITER, 100, 1e-6));</span><br><span class="line"></span><br><span class="line">////设置训练数据</span><br><span class="line">Ptr&lt;TrainData&gt; tData = TrainData::create(trainMat, ROW_SAMPLE, labelsMat);</span><br><span class="line">svm-&gt;train(tData);</span><br><span class="line">svm-&gt;save(&quot;SVM_data.xml&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>SVM模型调用</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">int smpW = 540;</span><br><span class="line">int smpH = 360;</span><br><span class="line"></span><br><span class="line">//创建并调用SVM模型</span><br><span class="line">Ptr&lt;SVM&gt; svm = SVM::load(&quot;SVM_data.xml&quot;);</span><br><span class="line">cout &lt;&lt; &quot;测试&quot; &lt;&lt; endl;</span><br><span class="line">for (int i = 0; i &lt; 2; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = 5; j &lt; 6; j++)</span><br><span class="line">&#123;</span><br><span class="line">Mat testMat(1, smpW * smpH, CV_32FC1);</span><br><span class="line">float * testData = testMat.ptr&lt;float&gt;(0);</span><br><span class="line">string path = format(&quot;%d%d.png&quot;, i, j);</span><br><span class="line">Mat img = imread(path, 0);</span><br><span class="line">Canny(img, img, 50, 100);</span><br><span class="line"></span><br><span class="line">for (int h = 0; h &lt; smpH; h++)</span><br><span class="line">&#123;</span><br><span class="line">uchar * imgData = img.ptr&lt;uchar&gt;(h);</span><br><span class="line">for (int w = 0; w &lt; smpW; w++)</span><br><span class="line">&#123;</span><br><span class="line">int index2 = h*smpW + w;</span><br><span class="line">testData[index2] = imgData[w] * 1.0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Mat ret(1, 1, CV_32S);</span><br><span class="line">float response = svm-&gt;predict(testMat, ret); </span><br><span class="line"> //进行预测，返回1或0</span><br><span class="line">cout &lt;&lt; response &lt;&lt; endl;</span><br><span class="line">float * data = ret.ptr&lt;float&gt;(0);</span><br><span class="line">cout &lt;&lt; data[0] &lt;&lt; endl;</span><br><span class="line">waitKey(10);</span><br></pre></td></tr></table></figure></p><hr><h1 id="二、神经网络训练及工作原理"><a href="#二、神经网络训练及工作原理" class="headerlink" title="二、神经网络训练及工作原理"></a>二、神经网络训练及工作原理</h1><hr><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a><strong>1.原理</strong></h2><p><img src="http://p6hlch5jf.bkt.clouddn.com/2.png" alt="原理图"></p><ul><li><a href="http://blog.csdn.net/app_12062011/article/details/54374893" target="_blank" rel="noopener">CNN原理解读</a></li></ul><ol><li><p>原理是：知道初始数据和需要的结果，分别用两个容器存储样本和标签数据，然后输入神经网络，神经网络通过大量数据的训练，使各层间的权值趋于稳定，直至模型训练完成。</p></li><li><p>目的：当给模型一个数据时，通过之前训练得出的模型，计算结果并输出。</p></li></ol><h2 id="2-训练流程的例子（ANN）"><a href="#2-训练流程的例子（ANN）" class="headerlink" title="2.训练流程的例子（ANN）"></a><strong>2.训练流程的例子（ANN）</strong></h2><p><strong>前提需要准备好样本，标签的准备最为费时</strong></p><ol><li>创建神经网络</li><li>设置网络层数和神经元个数</li><li>创建两个容器，分别保存样本和标签</li><li>读取两个容器中的数据</li><li>开始训练模型</li><li>保存模型（数据少的话不太费时，多的话可能要一两天）</li><li>后期调用</li></ol><h2 id="3-样本和标签的批量处理"><a href="#3-样本和标签的批量处理" class="headerlink" title="3.样本和标签的批量处理"></a><strong>3.样本和标签的批量处理</strong></h2><p>由于样本和标签很多，所以要将他们放在一个地方，读取时就可以实现自动批量处理，这里以csv文件为例。csv是逗号分隔值文件格式，是一种用来存储数据的纯文本文件。目标为数字识别，保存样式为：一行两个数据，第一个为数字图片的存储路径（即样本），第二个为标签（就是图片的数字，比如0,1,2···）具体展示如下。</p><p><img src="http://p6hlch5jf.bkt.clouddn.com/3.png" alt="样本和标签的读取"></p><h2 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4.注意事项"></a><strong>4.注意事项</strong></h2><ul><li><strong>ANN神经网络的输入层的端口数要等于样本的像素点，输出层端口数要等于label的个数</strong></li><li><strong>理论上网络越深则表达能力越强，能处理的训练数据也更多，但训练算法未必支持</strong></li><li><strong>机器学习要想生效，必须满足一个条件，就是目标问题对已有数据可解</strong></li></ul><h2 id="三、车牌识别（HyperLPR）"><a href="#三、车牌识别（HyperLPR）" class="headerlink" title="三、车牌识别（HyperLPR）"></a>三、车牌识别（HyperLPR）</h2><ul><li><strong>车牌识别中用到机器学习的有两个地方—–&gt;1. 车牌定位 2.车牌字符识别</strong></li></ul><p><strong>车牌定位</strong><br><img src="http://p6hlch5jf.bkt.clouddn.com/cpdw.png" alt="车牌定位"></p><hr><p><strong>车牌字符识别</strong><br><img src="http://p6hlch5jf.bkt.clouddn.com/cpsb.png" alt="车牌字符识别"></p><h1 id="运行效果展示："><a href="#运行效果展示：" class="headerlink" title="运行效果展示："></a>运行效果展示：</h1><p><img src="http://p6hlch5jf.bkt.clouddn.com/shibie1%20%281%29.png" alt=""></p><iframe height="300" width="380" src="http://p72ulegde.bkt.clouddn.com/%E7%BC%96%E8%AF%91.flv" frameborder="0" allowfullscreen><br></iframe> ]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、ANN、SVM模型训练及使用的代码&quot;&gt;&lt;a href=&quot;#一、ANN、SVM模型训练及使用的代码&quot; class=&quot;headerlink&quot; title=&quot;一、ANN、SVM模型训练及使用的代码&quot;&gt;&lt;/a&gt;一、ANN、SVM模型训练及使用的代码&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;提示：以下基于opencv3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;由于我没有接触过类似于Tensorflow的深度学习框架，所以下面了解的知识还比较片面。除TensorFlow外，深度学习的框架还有：Caffe、Keras、CNTK、Torch7、MXNet、Leaf、Theano、DeepLearning4、Lasagne、Neon，等等&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/xinyu3307/article/details/74979842&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;关于用TensorFlow训练模型的文章&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://p6hlch5jf.bkt.clouddn.com/dog.jpg/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
